Log of Audax.Validator, version 1.32.49 [1.32.49.0]

Current Time: 07.09.2023 13:14:49
.NET Version: 4.0.30319.42000
OS Version: Microsoft Windows NT 6.2.9200.0
Current Culture: ru-RU
Current UI Culture: ru-RU
Command Line: "F:\Victoria 2 DEVELOPMENT\mod\1\_Utility\Audax.Validator\App\Audax.Validator.exe" 
Processor Count: 12
Current Directory: F:\Victoria 2 DEVELOPMENT\mod\1\_Utility\Audax.Validator\App
Machine Name: [machine_name <*******-*******>]
System Directory: C:\WINDOWS\system32
User Name: [user_name <*********>]
User Domain Name: [machine_name <*******-*******>]
User Interactive: True
Tick Count: 20.08:31:52.0310000
Shutdown Started: False

ENVIRONMENT VARIABLES
COMPUTERNAME: [machine_name <*******-*******>]
USERPROFILE: C:\Users\[user_name <*********>]
HOMEPATH: \Users\[user_name <*********>]
LOCALAPPDATA: C:\Users\[user_name <*********>]\AppData\Local
PSModulePath: C:\Program Files\WindowsPowerShell\Modules;C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules
PROCESSOR_ARCHITECTURE: AMD64
Path: C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Python311\Scripts\;C:\Program Files\Python311\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\dotnet\;C:\Program Files\nodejs\;F:\PHP\php;C:\ProgramData\ComposerSetup\bin;C:\Users\[user_name <*********>]\AppData\Local\Programs\Python\Python311\Scripts\;C:\Users\[user_name <*********>]\AppData\Local\Programs\Python\Python311\;C:\Users\[user_name <*********>]\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\[user_name <*********>]\AppData\Local\Programs\Python\Python310\;C:\Users\[user_name <*********>]\AppData\Local\Microsoft\WindowsApps;C:\Users\[user_name <*********>]\AppData\Local\GitHubDesktop\bin;C:\Users\[user_name <*********>]\.dotnet\tools;I:\PhpStorm 2023.1.1\bin;;C:\Users\[user_name <*********>]\AppData\Roaming\npm;C:\Users\[user_name <*********>]\AppData\Roaming\Composer\vendor\bin;C:\Program Files (x86)\FreeArc\bin;F:\Microsoft VS Code\bin
CommonProgramFiles(x86): C:\Program Files (x86)\Common Files
ProgramFiles(x86): C:\Program Files (x86)
PROCESSOR_LEVEL: 23
LOGONSERVER: \\[machine_name <*******-*******>]
PATHEXT: .COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW
HOMEDRIVE: C:
VBOX_MSI_INSTALL_PATH: F:\VirtualBox\
SystemRoot: C:\WINDOWS
SESSIONNAME: Console
ALLUSERSPROFILE: C:\ProgramData
DriverData: C:\Windows\System32\Drivers\DriverData
APPDATA: C:\Users\[user_name <*********>]\AppData\Roaming
PROCESSOR_REVISION: 7100
USERNAME: [user_name <*********>]
CommonProgramW6432: C:\Program Files\Common Files
OneDrive: C:\Users\[user_name <*********>]\OneDrive - Tallinn Polytechnic School
CommonProgramFiles: C:\Program Files\Common Files
OS: Windows_NT
USERDOMAIN_ROAMINGPROFILE: [machine_name <*******-*******>]
PROCESSOR_IDENTIFIER: AMD64 Family 23 Model 113 Stepping 0, AuthenticAMD
ComSpec: C:\WINDOWS\system32\cmd.exe
PhpStorm: I:\PhpStorm 2023.1.1\bin;
SystemDrive: C:
TEMP: C:\Users\OLEGTI~1\AppData\Local\Temp
ProgramFiles: C:\Program Files
NUMBER_OF_PROCESSORS: 12
TMP: C:\Users\OLEGTI~1\AppData\Local\Temp
ProgramData: C:\ProgramData
ProgramW6432: C:\Program Files
windir: C:\WINDOWS
USERDOMAIN: [machine_name <*******-*******>]
PUBLIC: C:\Users\Public

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
File system tree
..\App
..\Data
..\Dev
..\Extension
..\Information
..\SettingsFiles
..\Extension\Bin
..\Extension\Data
..\Extension\Data\Ck2
..\Extension\Data\Eu3
..\Extension\Data\Eu4
..\Extension\Data\EuRome
..\Extension\Data\Hoi3
..\Extension\Data\MotE
..\Extension\Data\Sengoku
..\Extension\Data\Vic2
..\Extension\Data\_Common
..\Extension\Data\Ck2\Calls
..\Extension\Data\Ck2\History
..\Extension\Data\Ck2\__pycache__
..\Extension\Data\Ck2\Calls\__pycache__
..\Extension\Data\Eu3\Calls
..\Extension\Data\Eu3\History
..\Extension\Data\Eu3\Translation
..\Extension\Data\Eu3\Translation\en-US
..\Extension\Data\Eu4\Calls
..\Extension\Data\Eu4\History
..\Extension\Data\Eu4\Calls\__pycache__
..\Extension\Data\EuRome\Calls
..\Extension\Data\EuRome\History
..\Extension\Data\Hoi3\Calls
..\Extension\Data\Hoi3\Events
..\Extension\Data\Hoi3\History
..\Extension\Data\MotE\Calls
..\Extension\Data\MotE\History
..\Extension\Data\Sengoku\Calls
..\Extension\Data\Sengoku\History
..\Extension\Data\Vic2\Calls
..\Extension\Data\Vic2\History
..\Extension\Data\Vic2\Translation
..\Extension\Data\Vic2\Translation\en-US
..\DidYouKnow.pdf
..\EnableOlderVersions.bat
..\readme.txt
..\Validator.exe
..\Validator.exe.config
..\App\Audax.Common.dll
..\App\Audax.Pdox.dll
..\App\Audax.Validator.Core.dll
..\App\Audax.Validator.exe
..\App\Audax.Validator.exe.config
..\App\YamlDotNet.dll
..\App\YamlDotNet.xml
..\Data\call_graph.txt
..\Data\log.txt
..\Data\logComposition.txt
..\Data\save.txt
..\Dev\Audax.Common.dll
..\Dev\Audax.Pdox.dll
..\Dev\Audax.Validator.Europa.dll
..\Extension\Bin\Audax.Common.dll
..\Extension\Bin\Audax.Pdox.dll
..\Extension\Bin\Audax.Validator.Clausewitz.dll
..\Extension\Bin\Audax.Validator.Extension.dll
..\Extension\Bin\YamlDotNet.dll
..\Extension\Bin\YamlUtility.dll
..\Extension\Data\1.txt
..\Extension\Data\build_templates.py
..\Extension\Data\Global.pdox
..\Extension\Data\Ck2\Artifacts.pdox
..\Extension\Data\Ck2\Bloodlines.pdox
..\Extension\Data\Ck2\Bookmarks.pdox
..\Extension\Data\Ck2\Buildings.pdox
..\Extension\Data\Ck2\CbTypes.pdox
..\Extension\Data\Ck2\CombatTactics.pdox
..\Extension\Data\Ck2\CombatTactics.pdox.template
..\Extension\Data\Ck2\Core.pdox
..\Extension\Data\Ck2\Cultures.pdox
..\Extension\Data\Ck2\Decisions.pdox
..\Extension\Data\Ck2\DecisionsHelper.pdox
..\Extension\Data\Ck2\DecisionsHelper.pdox.template
..\Extension\Data\Ck2\Disease.pdox
..\Extension\Data\Ck2\Dynasties.pdox
..\Extension\Data\Ck2\Events.pdox
..\Extension\Data\Ck2\EventsHelper.pdox
..\Extension\Data\Ck2\Government.pdox
..\Extension\Data\Ck2\hardcoded_scripted.py
..\Extension\Data\Ck2\Interface.pdox
..\Extension\Data\Ck2\JobActions.pdox
..\Extension\Data\Ck2\Localization.pdox
..\Extension\Data\Ck2\Map.pdox
..\Extension\Data\Ck2\Modifiers.pdox
..\Extension\Data\Ck2\Music.pdox
..\Extension\Data\Ck2\Nicknames.pdox
..\Extension\Data\Ck2\Objectives.pdox
..\Extension\Data\Ck2\OnActions.pdox
..\Extension\Data\Ck2\OnActions.pdox.template
..\Extension\Data\Ck2\on_actions.py
..\Extension\Data\Ck2\Options.pdox
..\Extension\Data\Ck2\RegionColors.pdox
..\Extension\Data\Ck2\Religions.pdox
..\Extension\Data\Ck2\Religions.pdox.template
..\Extension\Data\Ck2\Societies.pdox
..\Extension\Data\Ck2\Tech.pdox
..\Extension\Data\Ck2\Titles.pdox
..\Extension\Data\Ck2\Trade.pdox
..\Extension\Data\Ck2\Traits.pdox
..\Extension\Data\Ck2\War.pdox
..\Extension\Data\Ck2\_Ck2.gam.pdox
..\Extension\Data\Ck2\Calls\AllMisc.pdox
..\Extension\Data\Ck2\Calls\AllMisc.pdox.template
..\Extension\Data\Ck2\Calls\Bloodline.pdox
..\Extension\Data\Ck2\Calls\Calls.pdox
..\Extension\Data\Ck2\Calls\calls.py
..\Extension\Data\Ck2\Calls\CharActions.pdox
..\Extension\Data\Ck2\Calls\CharBasic.pdox
..\Extension\Data\Ck2\Calls\CharCreation.pdox
..\Extension\Data\Ck2\Calls\Claims.pdox
..\Extension\Data\Ck2\Calls\Clans.pdox
..\Extension\Data\Ck2\Calls\Clans.pdox.template
..\Extension\Data\Ck2\Calls\Control.pdox
..\Extension\Data\Ck2\Calls\Control.pdox.template
..\Extension\Data\Ck2\Calls\control.py
..\Extension\Data\Ck2\Calls\Culture.pdox
..\Extension\Data\Ck2\Calls\Culture.pdox.template
..\Extension\Data\Ck2\Calls\Family.pdox
..\Extension\Data\Ck2\Calls\FriendsRivals.pdox
..\Extension\Data\Ck2\Calls\Government.pdox
..\Extension\Data\Ck2\Calls\Guardianship.pdox
..\Extension\Data\Ck2\Calls\Health.pdox
..\Extension\Data\Ck2\Calls\Holdings.pdox
..\Extension\Data\Ck2\Calls\Holdings.pdox.template
..\Extension\Data\Ck2\Calls\LiegeVassal.pdox
..\Extension\Data\Ck2\Calls\LiegeVassal.pdox.template
..\Extension\Data\Ck2\Calls\LoversMarriage.pdox
..\Extension\Data\Ck2\Calls\LoversMarriage.pdox.template
..\Extension\Data\Ck2\Calls\Modifiers.pdox
..\Extension\Data\Ck2\Calls\Money.pdox
..\Extension\Data\Ck2\Calls\Opinions.pdox
..\Extension\Data\Ck2\Calls\Plots.pdox
..\Extension\Data\Ck2\Calls\Plots.pdox.template
..\Extension\Data\Ck2\Calls\Province.pdox
..\Extension\Data\Ck2\Calls\Province.pdox.template
..\Extension\Data\Ck2\Calls\Religion.pdox
..\Extension\Data\Ck2\Calls\Religion.pdox.template
..\Extension\Data\Ck2\Calls\Rulers.pdox
..\Extension\Data\Ck2\Calls\Societies.pdox
..\Extension\Data\Ck2\Calls\Societies.pdox.template
..\Extension\Data\Ck2\Calls\Tech.pdox
..\Extension\Data\Ck2\Calls\Tiers.pdox
..\Extension\Data\Ck2\Calls\Tiers.pdox.template
..\Extension\Data\Ck2\Calls\TitleBasic.pdox
..\Extension\Data\Ck2\Calls\TitleTransfer.pdox
..\Extension\Data\Ck2\Calls\TitleTransfer.pdox.template
..\Extension\Data\Ck2\Calls\Tooltips.pdox
..\Extension\Data\Ck2\Calls\Tooltips.pdox.template
..\Extension\Data\Ck2\Calls\Traits.pdox
..\Extension\Data\Ck2\Calls\Tribal.pdox
..\Extension\Data\Ck2\Calls\Wars.pdox
..\Extension\Data\Ck2\Calls\Wars.pdox.template
..\Extension\Data\Ck2\Calls\Wonder.pdox
..\Extension\Data\Ck2\Calls\Wonder.pdox.template
..\Extension\Data\Ck2\Calls\_Main.pdox
..\Extension\Data\Ck2\Calls\_Main.pdox.template
..\Extension\Data\Ck2\Calls\_Model.pdox
..\Extension\Data\Ck2\Calls\__pycache__\calls.cpython-37.pyc
..\Extension\Data\Ck2\Calls\__pycache__\control.cpython-37.pyc
..\Extension\Data\Ck2\History\Characters.pdox
..\Extension\Data\Ck2\History\OffmapPowers.pdox
..\Extension\Data\Ck2\History\Provinces.pdox
..\Extension\Data\Ck2\History\Titles.pdox
..\Extension\Data\Ck2\History\Wars.pdox
..\Extension\Data\Ck2\__pycache__\hardcoded_scripted.cpython-37.pyc
..\Extension\Data\Ck2\__pycache__\on_actions.cpython-37.pyc
..\Extension\Data\Eu3\AdvisorTypes.pdox
..\Extension\Data\Eu3\AiStrategies.pdox
..\Extension\Data\Eu3\Buildings.pdox
..\Extension\Data\Eu3\Cbs.pdox
..\Extension\Data\Eu3\Core.pdox
..\Extension\Data\Eu3\Countries.pdox
..\Extension\Data\Eu3\CountryColors.pdox
..\Extension\Data\Eu3\Cultures.pdox
..\Extension\Data\Eu3\Decisions.pdox
..\Extension\Data\Eu3\DecisionsHelper.pdox
..\Extension\Data\Eu3\Events.pdox
..\Extension\Data\Eu3\EventsHelper.pdox
..\Extension\Data\Eu3\Factions.pdox
..\Extension\Data\Eu3\Ideas.pdox
..\Extension\Data\Eu3\Localization.pdox
..\Extension\Data\Eu3\Map.pdox
..\Extension\Data\Eu3\Missions.pdox
..\Extension\Data\Eu3\MissionsHelper.pdox
..\Extension\Data\Eu3\Modifiers.pdox
..\Extension\Data\Eu3\OnActions.pdox
..\Extension\Data\Eu3\Options.pdox
..\Extension\Data\Eu3\Policies.pdox
..\Extension\Data\Eu3\Prices.pdox
..\Extension\Data\Eu3\RebelTypes.pdox
..\Extension\Data\Eu3\RevoltTriggers.pdox
..\Extension\Data\Eu3\Spies.pdox
..\Extension\Data\Eu3\Technology.pdox
..\Extension\Data\Eu3\Units.pdox
..\Extension\Data\Eu3\_Eu3Dw.gam.pdox
..\Extension\Data\Eu3\_Eu3Ht.gam.old.pdox
..\Extension\Data\Eu3\_Eu3In.gam.old.pdox
..\Extension\Data\Eu3\Calls\BasicCountry.pdox
..\Extension\Data\Eu3\Calls\BasicProvince.pdox
..\Extension\Data\Eu3\Calls\Colonization.pdox
..\Extension\Data\Eu3\Calls\Control.pdox
..\Extension\Data\Eu3\Calls\Cultures.pdox
..\Extension\Data\Eu3\Calls\Diplomacy.pdox
..\Extension\Data\Eu3\Calls\Economics.pdox
..\Extension\Data\Eu3\Calls\Factions.pdox
..\Extension\Data\Eu3\Calls\Hre.pdox
..\Extension\Data\Eu3\Calls\Leadership.pdox
..\Extension\Data\Eu3\Calls\Missions.pdox
..\Extension\Data\Eu3\Calls\Ownership.pdox
..\Extension\Data\Eu3\Calls\Religion.pdox
..\Extension\Data\Eu3\Calls\Scopes.pdox
..\Extension\Data\Eu3\Calls\Shogun.pdox
..\Extension\Data\Eu3\Calls\Status.pdox
..\Extension\Data\Eu3\Calls\War.pdox
..\Extension\Data\Eu3\Calls\_Main.pdox
..\Extension\Data\Eu3\Calls\_Model.pdox
..\Extension\Data\Eu3\History\Advisors.pdox
..\Extension\Data\Eu3\History\Countries.pdox
..\Extension\Data\Eu3\History\Diplomacy.pdox
..\Extension\Data\Eu3\History\Provinces.pdox
..\Extension\Data\Eu3\History\Wars.pdox
..\Extension\Data\Eu3\Translation\Header.pdox
..\Extension\Data\Eu3\Translation\en-US\Header.pdox
..\Extension\Data\Eu3\Translation\en-US\Map.pdox
..\Extension\Data\Eu4\Achievements.pdox
..\Extension\Data\Eu4\AdvisorTypes.pdox
..\Extension\Data\Eu4\AI.pdox
..\Extension\Data\Eu4\Bookmarks.pdox
..\Extension\Data\Eu4\Buildings.pdox
..\Extension\Data\Eu4\CbTypes.pdox
..\Extension\Data\Eu4\ColonialRegions.pdox
..\Extension\Data\Eu4\Core.pdox
..\Extension\Data\Eu4\Country.pdox
..\Extension\Data\Eu4\Cultures.pdox
..\Extension\Data\Eu4\Decisions.pdox
..\Extension\Data\Eu4\Diplomacy.pdox
..\Extension\Data\Eu4\Disasters.pdox
..\Extension\Data\Eu4\Eu4.gam.pdox
..\Extension\Data\Eu4\Events.pdox
..\Extension\Data\Eu4\EventsHelper.pdox
..\Extension\Data\Eu4\Factions.pdox
..\Extension\Data\Eu4\Governments.pdox
..\Extension\Data\Eu4\Ideas.pdox
..\Extension\Data\Eu4\ImperialReforms.pdox
..\Extension\Data\Eu4\Localization.pdox
..\Extension\Data\Eu4\Map.pdox
..\Extension\Data\Eu4\Misc.pdox
..\Extension\Data\Eu4\Missions.pdox
..\Extension\Data\Eu4\MissionsCountry.pdox
..\Extension\Data\Eu4\MissionsProvince.pdox
..\Extension\Data\Eu4\Modifiers.pdox
..\Extension\Data\Eu4\Music.pdox
..\Extension\Data\Eu4\OnActions.pdox
..\Extension\Data\Eu4\OnActions.pdox.template
..\Extension\Data\Eu4\Options.pdox
..\Extension\Data\Eu4\RebelTypes.pdox
..\Extension\Data\Eu4\Religions.pdox
..\Extension\Data\Eu4\RevoltTriggers.pdox
..\Extension\Data\Eu4\Tech.pdox
..\Extension\Data\Eu4\Trading.pdox
..\Extension\Data\Eu4\Units.pdox
..\Extension\Data\Eu4\Wars.pdox
..\Extension\Data\Eu4\Calls\calls.py
..\Extension\Data\Eu4\Calls\Control.pdox
..\Extension\Data\Eu4\Calls\Control.pdox.template
..\Extension\Data\Eu4\Calls\Misc.pdox
..\Extension\Data\Eu4\Calls\Misc.pdox.template
..\Extension\Data\Eu4\Calls\Religion.pdox
..\Extension\Data\Eu4\Calls\Scopes.pdox
..\Extension\Data\Eu4\Calls\Scopes.pdox.template
..\Extension\Data\Eu4\Calls\Status.pdox
..\Extension\Data\Eu4\Calls\Status.pdox.template
..\Extension\Data\Eu4\Calls\Territory.pdox
..\Extension\Data\Eu4\Calls\_Main.pdox
..\Extension\Data\Eu4\Calls\_Main.pdox.template
..\Extension\Data\Eu4\Calls\_Model.pdox
..\Extension\Data\Eu4\Calls\__pycache__\calls.cpython-37.pyc
..\Extension\Data\Eu4\History\Advisors.pdox
..\Extension\Data\Eu4\History\Countries.pdox
..\Extension\Data\Eu4\History\Diplomacy.pdox
..\Extension\Data\Eu4\History\Provinces.pdox
..\Extension\Data\Eu4\History\Wars.pdox
..\Extension\Data\EuRome\Core.pdox
..\Extension\Data\EuRome\Decisions.pdox
..\Extension\Data\EuRome\Events.pdox
..\Extension\Data\EuRome\Localization.pdox
..\Extension\Data\EuRome\MapPositions.pdox
..\Extension\Data\EuRome\Missions.pdox
..\Extension\Data\EuRome\Modifiers.pdox
..\Extension\Data\EuRome\Options.pdox
..\Extension\Data\EuRome\Technology.pdox
..\Extension\Data\EuRome\Titles.pdox
..\Extension\Data\EuRome\Traits.pdox
..\Extension\Data\EuRome\_EuRome.gam.old.pdox
..\Extension\Data\EuRome\_EuRomeVv.gam.pdox
..\Extension\Data\EuRome\Calls\Core.pdox
..\Extension\Data\EuRome\Calls\Cultures.pdox
..\Extension\Data\EuRome\Calls\Diplomacy.pdox
..\Extension\Data\EuRome\Calls\Economy.pdox
..\Extension\Data\EuRome\Calls\Expansion.pdox
..\Extension\Data\EuRome\Calls\Government.pdox
..\Extension\Data\EuRome\Calls\Image.pdox
..\Extension\Data\EuRome\Calls\Occupation.pdox
..\Extension\Data\EuRome\Calls\Ownership.pdox
..\Extension\Data\EuRome\Calls\Relations.pdox
..\Extension\Data\EuRome\Calls\Religion.pdox
..\Extension\Data\EuRome\Calls\Scopes.pdox
..\Extension\Data\EuRome\Calls\Status.pdox
..\Extension\Data\EuRome\Calls\Traits.pdox
..\Extension\Data\EuRome\Calls\Unrest.pdox
..\Extension\Data\EuRome\Calls\War.pdox
..\Extension\Data\EuRome\Calls\_Commands.pdox
..\Extension\Data\EuRome\Calls\_Main.pdox
..\Extension\Data\EuRome\Calls\_Model.pdox
..\Extension\Data\EuRome\Calls\_Triggers.pdox
..\Extension\Data\EuRome\History\Characters.pdox
..\Extension\Data\EuRome\History\Countries.pdox
..\Extension\Data\EuRome\History\Diplomacy.pdox
..\Extension\Data\EuRome\History\Provinces.pdox
..\Extension\Data\EuRome\History\Wars.pdox
..\Extension\Data\Hoi3\Buildings.pdox
..\Extension\Data\Hoi3\CbTypes.pdox
..\Extension\Data\Hoi3\CGM.pdox
..\Extension\Data\Hoi3\Combat.pdox
..\Extension\Data\Hoi3\Core.pdox
..\Extension\Data\Hoi3\Countries.pdox
..\Extension\Data\Hoi3\CovertOps.pdox
..\Extension\Data\Hoi3\Decisions.pdox
..\Extension\Data\Hoi3\FactionAims.pdox
..\Extension\Data\Hoi3\Government.pdox
..\Extension\Data\Hoi3\Localization.pdox
..\Extension\Data\Hoi3\Map.pdox
..\Extension\Data\Hoi3\Modifiers.pdox
..\Extension\Data\Hoi3\Music.pdox
..\Extension\Data\Hoi3\OnActions.pdox
..\Extension\Data\Hoi3\Options.pdox
..\Extension\Data\Hoi3\Partisanship.pdox
..\Extension\Data\Hoi3\Savefile.pdox
..\Extension\Data\Hoi3\Scenarios.pdox
..\Extension\Data\Hoi3\StrategicResources.pdox
..\Extension\Data\Hoi3\Techs.pdox
..\Extension\Data\Hoi3\Units.pdox
..\Extension\Data\Hoi3\_Hoi3.gam.old.pdox
..\Extension\Data\Hoi3\_Hoi3Ftm.gam.pdox
..\Extension\Data\Hoi3\_Hoi3Sf.gam.old.pdox
..\Extension\Data\Hoi3\_Hoi3Tfh.gam.pdox
..\Extension\Data\Hoi3\Calls\Core.pdox
..\Extension\Data\Hoi3\Calls\CoreTfh.pdox
..\Extension\Data\Hoi3\Calls\Diplomacy.pdox
..\Extension\Data\Hoi3\Calls\Government.pdox
..\Extension\Data\Hoi3\Calls\Ownership.pdox
..\Extension\Data\Hoi3\Calls\Politics.pdox
..\Extension\Data\Hoi3\Calls\Resources.pdox
..\Extension\Data\Hoi3\Calls\Scopes.pdox
..\Extension\Data\Hoi3\Calls\Status.pdox
..\Extension\Data\Hoi3\Calls\Unrest.pdox
..\Extension\Data\Hoi3\Calls\War.pdox
..\Extension\Data\Hoi3\Calls\_Main.pdox
..\Extension\Data\Hoi3\Calls\_Model.pdox
..\Extension\Data\Hoi3\Events\CountryEvents.pdox
..\Extension\Data\Hoi3\Events\ProvinceEvents.pdox
..\Extension\Data\Hoi3\Events\_Events.pdox
..\Extension\Data\Hoi3\History\Countries.pdox
..\Extension\Data\Hoi3\History\Diplo.pdox
..\Extension\Data\Hoi3\History\Leaders.pdox
..\Extension\Data\Hoi3\History\Oob.pdox
..\Extension\Data\Hoi3\History\Provinces.pdox
..\Extension\Data\Hoi3\History\Wars.pdox
..\Extension\Data\MotE\Bookmarks.pdox
..\Extension\Data\MotE\Brigades.pdox
..\Extension\Data\MotE\Buildings.pdox
..\Extension\Data\MotE\Core.pdox
..\Extension\Data\MotE\Countries.pdox
..\Extension\Data\MotE\Cultures.pdox
..\Extension\Data\MotE\Decisions.pdox
..\Extension\Data\MotE\DecisionsHelper.pdox
..\Extension\Data\MotE\Events.pdox
..\Extension\Data\MotE\EventsHelper.pdox
..\Extension\Data\MotE\Governments.pdox
..\Extension\Data\MotE\Ideas.pdox
..\Extension\Data\MotE\Leaders.pdox
..\Extension\Data\MotE\Localization.pdox
..\Extension\Data\MotE\Modifiers.pdox
..\Extension\Data\MotE\Options.pdox
..\Extension\Data\MotE\RevoltTriggers.pdox
..\Extension\Data\MotE\Traits.pdox
..\Extension\Data\MotE\Units.pdox
..\Extension\Data\MotE\_MotE.gam.pdox
..\Extension\Data\MotE\Calls\Control.pdox
..\Extension\Data\MotE\Calls\Misc.pdox
..\Extension\Data\MotE\Calls\Modifiers.pdox
..\Extension\Data\MotE\Calls\_Main.pdox
..\Extension\Data\MotE\Calls\_Scopes.pdox
..\Extension\Data\MotE\History\Countries.pdox
..\Extension\Data\MotE\History\Diplo.pdox
..\Extension\Data\MotE\History\Oob.pdox
..\Extension\Data\MotE\History\Provinces.pdox
..\Extension\Data\MotE\History\Wars.pdox
..\Extension\Data\Sengoku\Bookmarks.pdox
..\Extension\Data\Sengoku\Buildings.pdox
..\Extension\Data\Sengoku\Core.pdox
..\Extension\Data\Sengoku\Cultures.pdox
..\Extension\Data\Sengoku\Decisions.pdox
..\Extension\Data\Sengoku\Dynasties.pdox
..\Extension\Data\Sengoku\Events.pdox
..\Extension\Data\Sengoku\EventsHelper.pdox
..\Extension\Data\Sengoku\JobActions.pdox
..\Extension\Data\Sengoku\Localization.pdox
..\Extension\Data\Sengoku\Modifiers.pdox
..\Extension\Data\Sengoku\Ninjas.pdox
..\Extension\Data\Sengoku\Objectives.pdox
..\Extension\Data\Sengoku\OnActions.pdox
..\Extension\Data\Sengoku\OpinionModifiers.pdox
..\Extension\Data\Sengoku\Options.pdox
..\Extension\Data\Sengoku\RebelTypes.pdox
..\Extension\Data\Sengoku\Titles.pdox
..\Extension\Data\Sengoku\Traits.pdox
..\Extension\Data\Sengoku\Units.pdox
..\Extension\Data\Sengoku\_Sengoku.gam.pdox
..\Extension\Data\Sengoku\Calls\Commands.pdox
..\Extension\Data\Sengoku\Calls\Scopes.pdox
..\Extension\Data\Sengoku\Calls\Triggers.pdox
..\Extension\Data\Sengoku\Calls\_Main.pdox
..\Extension\Data\Sengoku\Calls\_Model.pdox
..\Extension\Data\Sengoku\History\Characters.pdox
..\Extension\Data\Sengoku\History\Diplomacy.pdox
..\Extension\Data\Sengoku\History\Global.pdox
..\Extension\Data\Sengoku\History\Provinces.pdox
..\Extension\Data\Sengoku\History\Titles.pdox
..\Extension\Data\Sengoku\History\Wars.pdox
..\Extension\Data\Vic2\Bookmarks.pdox
..\Extension\Data\Vic2\Buildings.pdox
..\Extension\Data\Vic2\CbTypes.pdox
..\Extension\Data\Vic2\Core.pdox
..\Extension\Data\Vic2\Countries.pdox
..\Extension\Data\Vic2\CountryColors.pdox
..\Extension\Data\Vic2\Crimes.pdox
..\Extension\Data\Vic2\Cultures.pdox
..\Extension\Data\Vic2\Decisions.pdox
..\Extension\Data\Vic2\Events.pdox
..\Extension\Data\Vic2\EventsHelper.pdox
..\Extension\Data\Vic2\Goods.pdox
..\Extension\Data\Vic2\Governments.pdox
..\Extension\Data\Vic2\Inventions.pdox
..\Extension\Data\Vic2\Issues.pdox
..\Extension\Data\Vic2\Localization.pdox
..\Extension\Data\Vic2\Map.pdox
..\Extension\Data\Vic2\Modifiers.pdox
..\Extension\Data\Vic2\Music.pdox
..\Extension\Data\Vic2\NationalFocuses.pdox
..\Extension\Data\Vic2\NationalValues.pdox
..\Extension\Data\Vic2\OnActions.pdox
..\Extension\Data\Vic2\Options.pdox
..\Extension\Data\Vic2\PopTypes.pdox
..\Extension\Data\Vic2\RebelTypes.pdox
..\Extension\Data\Vic2\Religion.pdox
..\Extension\Data\Vic2\Sound.pdox
..\Extension\Data\Vic2\Technology.pdox
..\Extension\Data\Vic2\Traits.pdox
..\Extension\Data\Vic2\Units.pdox
..\Extension\Data\Vic2\_Vic2.gam.old.pdox
..\Extension\Data\Vic2\_Vic2Ahd.gam.pdox
..\Extension\Data\Vic2\_Vic2Hod.gam.pdox
..\Extension\Data\Vic2\Calls\Basic.pdox
..\Extension\Data\Vic2\Calls\BasicAhd.pdox
..\Extension\Data\Vic2\Calls\BasicHod.pdox
..\Extension\Data\Vic2\Calls\Control.pdox
..\Extension\Data\Vic2\Calls\Culture.pdox
..\Extension\Data\Vic2\Calls\Diplomacy.pdox
..\Extension\Data\Vic2\Calls\Religion.pdox
..\Extension\Data\Vic2\Calls\Status.pdox
..\Extension\Data\Vic2\Calls\V2Commands.txt
..\Extension\Data\Vic2\Calls\V2Effects.txt
..\Extension\Data\Vic2\Calls\War.pdox
..\Extension\Data\Vic2\Calls\_Main.pdox
..\Extension\Data\Vic2\Calls\_Model.pdox
..\Extension\Data\Vic2\Calls\_Scopes.pdox
..\Extension\Data\Vic2\History\Country.pdox
..\Extension\Data\Vic2\History\Diplomacy.pdox
..\Extension\Data\Vic2\History\Pops.pdox
..\Extension\Data\Vic2\History\Provinces.pdox
..\Extension\Data\Vic2\History\Wars.pdox
..\Extension\Data\Vic2\History\_.pdox
..\Extension\Data\Vic2\Translation\Header.pdox
..\Extension\Data\Vic2\Translation\en-US\Basic.pdox
..\Extension\Data\Vic2\Translation\en-US\Header.pdox
..\Extension\Data\_Common\CountryHistory.pdox
..\Extension\Data\_Common\FactorModifier.pdox
..\Extension\Data\_Common\MapCommon.pdox
..\Extension\Data\_Common\ProvinceHistory.pdox
..\Information\Changelog.rtf
..\Information\errorCodes.txt
..\SettingsFiles\Ck2.txt
..\SettingsFiles\Eu3.txt
..\SettingsFiles\Eu4.txt
..\SettingsFiles\Hoi3.txt
..\SettingsFiles\MotE.txt
..\SettingsFiles\Rome.txt
..\SettingsFiles\Sengoku.txt
..\SettingsFiles\Vic2.txt


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


DynamicErrors: 
DynamicErrors: 
DynamicErrors: List of dynamic error loads
DynamicErrors: 	ParseFailureError
DynamicErrors: 	InvalidChildError
DynamicErrors: 	DirectoryNotFoundError
DynamicErrors: 	FileNotFoundError
DynamicErrors: 	BadError
DynamicErrors: 	NodeStructureError
DynamicErrors: End list
DynamicErrors: 
DynamicErrors: 
ValidationManager: StatusLog > Beginning initialization...
ValidationManager: StatusLog > Initialization complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 9 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 20 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 351 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 263 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 468 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 41 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 169 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 115 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 557 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 112 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 23 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 303 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 4473 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 97 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1524 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 1731 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 519 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 23 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 94 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 6 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 661 Cache misses: 4193
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 9 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 274 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 252 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 505 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 32 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 110 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 506 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 7 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 119 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 22 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 4270 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 93 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1451 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 1236 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 516 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 22 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 99 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 661 Cache misses: 4193
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 10 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 368 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 246 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 476 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 32 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 200 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 114 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 631 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 7 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 135 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 25 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 15 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 4479 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 98 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1464 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 907 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 499 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 24 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 94 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 661 Cache misses: 4193
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 10 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 354 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 311 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 504 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 33 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 177 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 106 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 525 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 119 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 23 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 4666 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 160 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1545 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 587 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 517 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 24 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 101 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 6 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 661 Cache misses: 4188
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 13 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 322 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 307 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 7 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 483 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 32 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 178 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 106 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 515 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 114 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 22 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 4575 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 191 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 5 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 13 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1577 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 604 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 559 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 24 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 101 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 8 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 661 Cache misses: 4188
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 9 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 367 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 267 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 542 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 33 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 173 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 102 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 505 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 8 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 113 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 23 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2198 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 93 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1493 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 698 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 523 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 27 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 94 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 6 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 661 Cache misses: 4188
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 10 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 322 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 249 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 551 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 31 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 176 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 99 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 528 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 121 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 22 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2157 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 100 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1650 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 682 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 521 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 23 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 93 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 2 ms!
ValidationManager: StatusLog > Cache hits: 661 Cache misses: 4188
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 14 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 387 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 260 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 10 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 465 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 31 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 177 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 139 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 602 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 137 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 24 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2368 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 106 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1630 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 730 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 1045 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 23 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 101 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 661 Cache misses: 4328
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 14 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 371 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 294 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 7 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 475 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 38 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 192 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 109 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 665 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 126 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 27 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2267 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 125 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 5 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1653 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 625 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 654 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 24 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 99 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 7 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 661 Cache misses: 4328
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 15 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 340 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 258 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 8 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 475 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 33 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 179 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 103 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 636 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 119 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 25 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2148 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 95 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1532 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 703 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 699 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 31 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 102 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 6 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 661 Cache misses: 4328
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 9 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 345 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 245 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 494 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 36 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 189 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 105 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 525 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 7 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 116 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 25 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2171 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 100 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1568 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 613 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 517 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 23 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 92 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 3 ms!
ValidationManager: StatusLog > Cache hits: 661 Cache misses: 4328
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 11 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > 
ValidationManager: StatusLog > ec) EXCEPTION CONTEXT
ValidationManager: StatusLog > ec) Validation Task: Casus Belli
StatusLog > Validation Key: CbTypes
StatusLog > Validation Type: Audax.Validator.TypeExtension.DeclarativeValidatorJob
ValidationManager: StatusLog > ec) F:\Victoria 2 DEVELOPMENT\mod\1\decisions\0_BIG_BROTHER_decs.txt
ValidationManager: StatusLog > 
StatusLog > 
StatusLog > 
StatusLog > ERROR
StatusLog > System.NullReferenceException: Ссылка на объект не указывает на экземпляр объекта.
StatusLog >    в Audax.Validator.SafeNodeOpsCore.GetDocumentInfo(Node node)
StatusLog >    в Audax.Validator.SafeNodeOpsCore.GetNodePath(Node node)
StatusLog >    в Audax.Validator.Location..ctor(ElementNode node)
StatusLog >    в Audax.Validator.CommentMetadataSystem.HasIgnore(ElementNode node, Int32 errorCode)
StatusLog >    в Audax.Validator.VE.ReportNodeStructureError(Context c, ElementNode node, String message, Int32 errorCode, IDictionary`2 data)
StatusLog >    в System.Dynamic.UpdateDelegates.UpdateAndExecuteVoid6[T0,T1,T2,T3,T4,T5](CallSite site, T0 arg0, T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5)
StatusLog >    в Audax.Validator.DynamicErrors.ReportNodeStructureError(Context c, ElementNode node, String message)
StatusLog >    в Audax.Validator.CommentMetadataSystem.DocumentData..ctor(DynamicErrors dynamicErrors, Context c, Document doc)
StatusLog >    в Audax.Validator.CommentMetadataSystem.LoadWithFile(Context c, Document doc)
StatusLog >    в Audax.Validator.FileSystem.LoadDocument(Context c, DocumentInterpreter interpreter, CFilePath path, Encoding encoding)
StatusLog >    в Audax.Validator.FileSystem.LoadPdoDocument(Context c, CFilePath path)
StatusLog >    в Audax.Validator.ContextValidatorSystem.ContextFileCrawler.ContextFileCrawlerPrototype.ProcessPath(Context c, CFilePath path, IList`1 idSearch, IList`1 callSearch, IList`1 stringSearches, IList`1 eventScopes, IDictionary`2 eventTargetNames, Dictionary`2 variables, Dictionary`2 savedNames, ScriptedRuleData scriptedEffects)
StatusLog >    в Audax.Validator.ContextValidatorSystem.ContextFileCrawler.ContextFileCrawlerPrototype.GetWorker()
StatusLog >    в Audax.Validator.ContextValidatorSystem.ContextFileCrawler.get_worker()
StatusLog >    в Audax.Validator.ContextValidatorSystem.ContextFileCrawler.LoadAll()
StatusLog >    в Audax.Validator.ContextValidatorSystem.ContextValidatorInfo.Load()
StatusLog >    в Audax.Validator.ContextValidatorSystem.ContextValidatorInfo.Validate(String key, ElementNode node, NodeFlags flags, Boolean isOrClause, Boolean nestedOrIsCool)
StatusLog >    в Audax.Validator.ContextValidatorSystem.ContextValidatorConstraint.Validate(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ComplexConstraintWorker.ValidateInstanceAsBase(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ValidateInstanceAsBase(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.InheritanceConstraint.Validate(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ComplexConstraintWorker.ValidateInstanceAsBase(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ComplexConstraintWorker.ElementValidate(ElementNode node)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ElementValidate(ElementNode node)
StatusLog >    в Audax.Validator.TypeCore.ChildConstraintSystem.ChildConstraint.Validate(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ComplexConstraintWorker.ValidateInstanceAsBase(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ValidateInstanceAsBase(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeExtension.NodeSwitcher.ValidateAsBase(ElementNode node, Constraint constraint, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeExtension.NodeSwitcher.ValidateAsBase(ElementNode node, Constraint constraint, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeExtension.NodeSwitcher.Worker.Validate(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeExtension.NodeSwitcher.Validate(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ComplexConstraintWorker.ValidateInstanceAsBase(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ComplexConstraintWorker.ElementValidate(ElementNode node)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ElementValidate(ElementNode node)
StatusLog >    в Audax.Validator.TypeCore.PlaceholderConstraint.ElementValidate(ElementNode node)
StatusLog >    в Audax.Validator.TypeCore.ChildConstraintSystem.ChildConstraint.Validate(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ComplexConstraintWorker.ValidateInstanceAsBase(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ComplexConstraintWorker.ElementValidate(ElementNode node)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ElementValidate(ElementNode node)
StatusLog >    в Audax.Validator.TypeExtension.DeclarativeValidatorJob.DeclarativeValidatorWorker.Validate()
StatusLog >    в Audax.Validator.TypeExtension.DeclarativeValidatorJob.ValidateOverride()
StatusLog >    в Audax.Validator.ValidatorJobBase.Validate()
StatusLog >    в Audax.Validator.ValidatorJob.Validate()
StatusLog >    в Audax.Validator.GameValidator.Validate(Action onEachValidatorCompleteAction)
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 9 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > 
ValidationManager: StatusLog > ec) EXCEPTION CONTEXT
ValidationManager: StatusLog > ec) Validation Task: Casus Belli
StatusLog > Validation Key: CbTypes
StatusLog > Validation Type: Audax.Validator.TypeExtension.DeclarativeValidatorJob
ValidationManager: StatusLog > ec) F:\Victoria 2 DEVELOPMENT\mod\1\decisions\0_BIG_BROTHER_decs.txt
ValidationManager: StatusLog > 
StatusLog > 
StatusLog > 
StatusLog > ERROR
StatusLog > System.NullReferenceException: Ссылка на объект не указывает на экземпляр объекта.
StatusLog >    в Audax.Validator.SafeNodeOpsCore.GetDocumentInfo(Node node)
StatusLog >    в Audax.Validator.SafeNodeOpsCore.GetNodePath(Node node)
StatusLog >    в Audax.Validator.Location..ctor(ElementNode node)
StatusLog >    в Audax.Validator.CommentMetadataSystem.HasIgnore(ElementNode node, Int32 errorCode)
StatusLog >    в Audax.Validator.VE.ReportNodeStructureError(Context c, ElementNode node, String message, Int32 errorCode, IDictionary`2 data)
StatusLog >    в Audax.Validator.DynamicErrors.ReportNodeStructureError(Context c, ElementNode node, String message)
StatusLog >    в Audax.Validator.CommentMetadataSystem.DocumentData..ctor(DynamicErrors dynamicErrors, Context c, Document doc)
StatusLog >    в Audax.Validator.CommentMetadataSystem.LoadWithFile(Context c, Document doc)
StatusLog >    в Audax.Validator.FileSystem.LoadDocument(Context c, DocumentInterpreter interpreter, CFilePath path, Encoding encoding)
StatusLog >    в Audax.Validator.FileSystem.LoadPdoDocument(Context c, CFilePath path)
StatusLog >    в Audax.Validator.ContextValidatorSystem.ContextFileCrawler.ContextFileCrawlerPrototype.ProcessPath(Context c, CFilePath path, IList`1 idSearch, IList`1 callSearch, IList`1 stringSearches, IList`1 eventScopes, IDictionary`2 eventTargetNames, Dictionary`2 variables, Dictionary`2 savedNames, ScriptedRuleData scriptedEffects)
StatusLog >    в Audax.Validator.ContextValidatorSystem.ContextFileCrawler.ContextFileCrawlerPrototype.GetWorker()
StatusLog >    в Audax.Validator.ContextValidatorSystem.ContextFileCrawler.get_worker()
StatusLog >    в Audax.Validator.ContextValidatorSystem.ContextFileCrawler.LoadAll()
StatusLog >    в Audax.Validator.ContextValidatorSystem.ContextValidatorInfo.Load()
StatusLog >    в Audax.Validator.ContextValidatorSystem.ContextValidatorInfo.Validate(String key, ElementNode node, NodeFlags flags, Boolean isOrClause, Boolean nestedOrIsCool)
StatusLog >    в Audax.Validator.ContextValidatorSystem.ContextValidatorConstraint.Validate(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ComplexConstraintWorker.ValidateInstanceAsBase(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ValidateInstanceAsBase(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.InheritanceConstraint.Validate(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ComplexConstraintWorker.ValidateInstanceAsBase(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ComplexConstraintWorker.ElementValidate(ElementNode node)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ElementValidate(ElementNode node)
StatusLog >    в Audax.Validator.TypeCore.ChildConstraintSystem.ChildConstraint.Validate(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ComplexConstraintWorker.ValidateInstanceAsBase(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ValidateInstanceAsBase(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeExtension.NodeSwitcher.ValidateAsBase(ElementNode node, Constraint constraint, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeExtension.NodeSwitcher.ValidateAsBase(ElementNode node, Constraint constraint, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeExtension.NodeSwitcher.Worker.Validate(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeExtension.NodeSwitcher.Validate(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ComplexConstraintWorker.ValidateInstanceAsBase(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ComplexConstraintWorker.ElementValidate(ElementNode node)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ElementValidate(ElementNode node)
StatusLog >    в Audax.Validator.TypeCore.PlaceholderConstraint.ElementValidate(ElementNode node)
StatusLog >    в Audax.Validator.TypeCore.ChildConstraintSystem.ChildConstraint.Validate(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ComplexConstraintWorker.ValidateInstanceAsBase(ElementNode node, NodeFlags flags)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ComplexConstraintWorker.ElementValidate(ElementNode node)
StatusLog >    в Audax.Validator.TypeCore.ComplexConstraint.ElementValidate(ElementNode node)
StatusLog >    в Audax.Validator.TypeExtension.DeclarativeValidatorJob.DeclarativeValidatorWorker.Validate()
StatusLog >    в Audax.Validator.TypeExtension.DeclarativeValidatorJob.ValidateOverride()
StatusLog >    в Audax.Validator.ValidatorJobBase.Validate()
StatusLog >    в Audax.Validator.ValidatorJob.Validate()
StatusLog >    в Audax.Validator.GameValidator.Validate(Action onEachValidatorCompleteAction)
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 14 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 320 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 258 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 8 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 485 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 34 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 183 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 105 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 531 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 123 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 28 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2157 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 97 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1532 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 556 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 567 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 24 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 94 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 6 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 661 Cache misses: 4328
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 13 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 298 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 232 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 460 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 34 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 174 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 86 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 520 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 111 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 22 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2085 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 98 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1461 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 569 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 483 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 22 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 95 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 656 Cache misses: 4327
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 15 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 322 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 242 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 8 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 574 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 33 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 178 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 86 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 542 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 8 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 117 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 24 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2161 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 97 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1561 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 605 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 479 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 21 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 98 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 8 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 656 Cache misses: 4128
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 10 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 319 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 245 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 583 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 45 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 175 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 86 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 515 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 7 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 114 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 22 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2102 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 93 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1581 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 632 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 983 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 24 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 103 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 6 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 656 Cache misses: 4327
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 15 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 346 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 240 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 520 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 34 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 181 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 116 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 587 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 6 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 115 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 21 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2129 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 103 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1498 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 658 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 559 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 23 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 6 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 94 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 6 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 656 Cache misses: 4327
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 10 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 322 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 243 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 463 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 31 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 191 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 86 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 530 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 7 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 119 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 23 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2136 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 111 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 5 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1678 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 582 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 526 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 24 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 95 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 6 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 656 Cache misses: 4327
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 14 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 364 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 254 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 476 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 32 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 174 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 84 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 601 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 114 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 22 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2106 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 97 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1617 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 598 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 556 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 24 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 101 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 656 Cache misses: 4327
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 9 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 369 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 235 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 556 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 34 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 175 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 82 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 511 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 123 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 22 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2098 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 96 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1572 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 608 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 532 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 24 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 95 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 656 Cache misses: 4327
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 14 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 334 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 284 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 492 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 33 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 211 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 96 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 518 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 117 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 23 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2070 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 95 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1450 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 583 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 503 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 22 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 91 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 656 Cache misses: 4327
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 13 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 95 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 230 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 7 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 474 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 32 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 162 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 12 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 38 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 112 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 22 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2069 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 32 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1442 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 574 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 530 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 23 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 92 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 6 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 88 Cache misses: 4194
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 14 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 100 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 288 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 633 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 34 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 170 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 11 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 7 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 115 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 24 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2178 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 37 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 2 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1548 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 771 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 516 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 25 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 95 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 88 Cache misses: 4054
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 13 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 325 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 253 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 7 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 474 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 32 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 178 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 85 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 544 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 8 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 120 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 22 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2150 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 95 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1494 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 587 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 490 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 21 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 93 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 656 Cache misses: 4187
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 10 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 334 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 316 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 12 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 573 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 33 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 177 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 86 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 534 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 126 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 25 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2140 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 97 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1545 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 607 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 632 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 23 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 96 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 7 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 656 Cache misses: 4186
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 9 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 361 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 300 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 8 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 488 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 33 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 178 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 87 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 548 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 8 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 116 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 23 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2246 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 100 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1648 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 766 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 536 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 25 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 115 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 6 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 2 ms!
ValidationManager: StatusLog > Cache hits: 656 Cache misses: 4206
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 15 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 334 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 246 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 8 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 504 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 32 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 185 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 93 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 615 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 120 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 26 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2233 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 101 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1556 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 590 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 513 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 22 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 95 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 656 Cache misses: 4194
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 9 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 333 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 229 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 536 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 33 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 171 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 90 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 497 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 8 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 110 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 21 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 1984 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 101 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1460 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 600 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 655 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 22 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 93 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 7 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 2 ms!
ValidationManager: StatusLog > Cache hits: 661 Cache misses: 4188
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 15 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 341 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 250 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 8 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 603 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 33 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 170 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 115 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 559 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 114 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 22 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2124 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 100 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 6 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1478 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 600 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 502 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 25 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 93 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 661 Cache misses: 4188
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 10 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 324 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 219 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 443 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 31 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 166 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 93 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 586 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 111 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 26 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 1972 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 90 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 5 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1433 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 553 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 480 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 22 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 92 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 661 Cache misses: 4188
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 17 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 351 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 245 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 7 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 41 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 164 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 132 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 558 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 123 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 24 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2109 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 101 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1618 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 656 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 522 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 25 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 97 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 6 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 0 ms!
ValidationManager: StatusLog > Cache hits: 601 Cache misses: 3500
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 27 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 340 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 256 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 639 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 46 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 191 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 131 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 563 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 131 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 24 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2171 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 111 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1532 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 736 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 522 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 24 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 98 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 7 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 661 Cache misses: 4188
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 15 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 327 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 242 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 7 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 464 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 33 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 171 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 95 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 524 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 116 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 22 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2108 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 99 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 6 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 3 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1738 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 706 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 543 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 28 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 106 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 6 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 1 ms!
ValidationManager: StatusLog > Cache hits: 661 Cache misses: 4187
ValidationManager: StatusLog > Validation complete!
ModSystem: Using file system Audax.Pdox.IO.Ck2FileSystem
ModSystem: Loading mod list...
ModSystem: Mod dir exists in game path F:\Victoria 2 DEVELOPMENT, enumerating
ModSystem: Found mod Clausewitz2Mod ModName=Based Mod v4.1 ModPath=F:\Victoria 2 DEVELOPMENT\mod\1 OriginalModFilePath=F:\Victoria 2 DEVELOPMENT\mod\1.mod
ModSystem: Examining default directory
ModSystem: Default directory data path is: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod
ModSystem: Data path exists
ValidationManager: StatusLog > [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
ValidationManager: [Error] Could not load mod file: C:\Users\[user_name <*********>]\Documents\Paradox Interactive\Crusader Kings II\mod\megacompany ck2.mod [Illegal closing bracket.]
VSET: Processing settings...
VSET: Found settings file at F:\Victoria 2 DEVELOPMENT\mod\1\ValidatorSettings.txt with structure 
# This is the settings file for Vic2 and expansions
# To use, copy this to your Vic2 installation base or mod directory and rename it "ValidatorSettings.txt"
# If you don't want to use it then don't copy it.
# Uncomment something to use it, or comment something to disable it.
# ##########################################
# General
# ##########################################
# Generates files containing flag and variable analysis.
# AddFlag = TraceFlags
# Generates a CSV file with basic information about events. Please note that the country column is determined based on heuristics and therefore may not be accurate.
# AddFlag = ExportEventInfo
# Ignores the warning when there is only one item in an OR clause
# AddFlag = ContextValidator.IgnoreOneItemInOrClauseWarning
# Ignores the warning when there is only one item in an AND clause
# AddFlag = ContextValidator.IgnoreOneItemInAndClauseWarning
# Ignores the warning when we are already in an AND clause.
# AddFlag = ContextValidator.IgnoreAlreadyInAndClauseWarning
# Ignores the warning "Having a factor of 1 is useless."
AddFlag = ContextValidator.NoWarnOnFactorOne
# Ignore Feb 29 errors for leap years
# AddFlag = IgnoreFeb29Errors
# ##########################################
# LOCALIZATION
# ##########################################
# Disables check that all keys are found in the localization file. This assumes that you use keys everywhere. If not you'll get lots of false positives.
# AddFlag = NoCheckKey
# ##########################################
# COUNTRY HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# Note that this option currently won't work anyways
# AddFlag = CountryHistory.NoComplexDateChecks
# ##########################################
# PROVINCE HISTORY
# ##########################################
# Disables checks that dates are in chronological order, and that there are no duplicates within groups of dates.
# AddFlag = ProvinceHistory.NoComplexDateChecks

VSET: Processing node element AddFlag = ContextValidator.NoWarnOnFactorOne
ValidationManager: StatusLog > Beginning validation...
ValidationManager: StatusLog > Beginning Bookmarks validation...
ValidationManager: StatusLog > Bookmarks validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Buildings validation...
ValidationManager: StatusLog > Buildings validation complete in 9 ms!
ValidationManager: StatusLog > Beginning Casus Belli validation...
ValidationManager: StatusLog > Casus Belli validation complete in 326 ms!
ValidationManager: StatusLog > Beginning Countries validation...
ValidationManager: StatusLog > Countries validation complete in 228 ms!
ValidationManager: StatusLog > Beginning Country colors validation...
ValidationManager: StatusLog > Country colors validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Country History validation...
ValidationManager: StatusLog > Country History validation complete in 515 ms!
ValidationManager: StatusLog > Beginning Crimes validation...
ValidationManager: StatusLog > Crimes validation complete in 37 ms!
ValidationManager: StatusLog > Beginning Cultures validation...
ValidationManager: StatusLog > Cultures validation complete in 169 ms!
ValidationManager: StatusLog > Beginning Decisions validation...
ValidationManager: StatusLog > Decisions validation complete in 95 ms!
ValidationManager: StatusLog > Beginning Diplomacy validation...
ValidationManager: StatusLog > Diplomacy validation complete in 2 ms!
ValidationManager: StatusLog > Beginning Events validation...
ValidationManager: StatusLog > Events validation complete in 514 ms!
ValidationManager: StatusLog > Beginning Goods validation...
ValidationManager: StatusLog > Goods validation complete in 5 ms!
ValidationManager: StatusLog > Beginning Governments validation...
ValidationManager: StatusLog > Governments validation complete in 7 ms!
ValidationManager: StatusLog > Beginning Inventions validation...
ValidationManager: StatusLog > Inventions validation complete in 112 ms!
ValidationManager: StatusLog > Beginning Issues validation...
ValidationManager: StatusLog > Issues validation complete in 22 ms!
ValidationManager: StatusLog > Beginning Localisation validation...
ValidationManager: StatusLog > Localisation validation complete in 3 ms!
ValidationManager: StatusLog > Beginning Map validation...
ValidationManager: StatusLog > Map validation complete in 2079 ms!
ValidationManager: StatusLog > Beginning Modifiers validation...
ValidationManager: StatusLog > Modifiers validation complete in 105 ms!
ValidationManager: StatusLog > Beginning Music validation...
ValidationManager: StatusLog > Music validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Focuses validation...
ValidationManager: StatusLog > National Focuses validation complete in 4 ms!
ValidationManager: StatusLog > Beginning National Values validation...
ValidationManager: StatusLog > National Values validation complete in 0 ms!
ValidationManager: StatusLog > Beginning On Actions validation...
ValidationManager: StatusLog > On Actions validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Pop types validation...
ValidationManager: StatusLog > Pop types validation complete in 1562 ms!
ValidationManager: StatusLog > Beginning Pops validation...
ValidationManager: StatusLog > Pops validation complete in 638 ms!
ValidationManager: StatusLog > Beginning Province History validation...
ValidationManager: StatusLog > Province History validation complete in 573 ms!
ValidationManager: StatusLog > Beginning Rebel Types validation...
ValidationManager: StatusLog > Rebel Types validation complete in 24 ms!
ValidationManager: StatusLog > Beginning Religion validation...
ValidationManager: StatusLog > Religion validation complete in 0 ms!
ValidationManager: StatusLog > Beginning Sound validation...
ValidationManager: StatusLog > Sound validation complete in 1 ms!
ValidationManager: StatusLog > Beginning Tech validation...
ValidationManager: StatusLog > Tech validation complete in 104 ms!
ValidationManager: StatusLog > Beginning Traits validation...
ValidationManager: StatusLog > Traits validation complete in 6 ms!
ValidationManager: StatusLog > Beginning Units validation...
ValidationManager: StatusLog > Units validation complete in 4 ms!
ValidationManager: StatusLog > Beginning Wars validation...
ValidationManager: StatusLog > Wars validation complete in 2 ms!
ValidationManager: StatusLog > Cache hits: 661 Cache misses: 4188
ValidationManager: StatusLog > Validation complete!