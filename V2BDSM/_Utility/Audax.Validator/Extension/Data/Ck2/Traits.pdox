(Validator Traits) = {
	Type = Default
	FriendlyName = "Traits"
	(FileGroup "common\traits" "*.txt")
	ValidatorName = Traits
}

(Type Traits) = {
	Child = {
		Left = { Type = String }
		Right = Trait
		UniqueId = Left
		(CheckKey "*" Left IfNot = NoCheckKey)
		(CheckKey "*_desc" Left IfNot = NoCheckKey)
	}
}

Global = {
(Type.Enum Trait) = { Import = { (FileGroup "common\traits" "*.txt") SelectPath = "*\[L]" } }
(Type.Enum ReligionBranchTag) = { Import = { (FileGroup "common\traits" "*.txt") SelectPath = "*\religious_branch\[R]" } }
}

(RestrictedNumber BirthValue) = { Restriction = "[0,10000]" Message = "The value '{0}' on node '{1}' must be between 0 and 10000." }

(Type Trait) = {
	Inherits = CharModifier

	Optional = { Left = "opposites" Right = { (PdoList Y) = { Type = Trait } } }
	Optional = { Left = "potential" Right = CharTrigger }
	
	# Only works in traits, apparently
	Optional = { Left = "christian_church_opinion" Right = Double }
	
	Optional = { Left = "virtue" Right = Bool }
	Optional = { Left = "vice" Right = Bool }
	Optional = { Left = "succession_gfx" Right = Bool }
	Optional = { Left = "hidden" Right = Bool }
	Optional = { Left = "hidden_from_others" Right = Bool }
	Optional = { Left = "same_trait_visibility" Right = Bool }
	Optional = { Left = "is_symptom" Right = Bool }

	Optional = { Left = "enatic" Right = Bool }
	Optional = { Left = "agnatic" Right = Bool }
	Optional = { Left = "is_epidemic" Right = Bool }
	Optional = { Left = "cached" Right = Bool }
	Optional = { Left = "pilgrimage" Right = Bool }
	Optional = { Left = "is_illness" Right = Bool }
	Optional = { Left = "is_health" Right = Bool }
	Optional = { Left = "incapacitating" Right = Bool }
	Optional = { Left = "personality" Right = Bool }
	Optional = { Left = "congenital" Right = Bool }
	(Optional IfNot = V110) = { Left = "birth" Right = Bool }
	(Optional If = V110) = { Left = "birth" Right = BirthValue }
	(Optional If = V110) = { Left = "rebel_inherited" Right = Bool }
	Optional = { Left = "education" Right = Bool }
	Optional = { Left = "priest" Right = Bool }
	Optional = { Left = "lifestyle" Right = Bool }
	Optional = { Left = "inbred" Right = Bool }
	Optional = { Left = "leader" Right = Bool }
	Optional = { Left = "immortal" Right = Bool }
	Optional = { Left = "cannot_marry" Right = Bool }
	Optional = { Left = "cannot_inherit" Right = Bool }
	Optional = { Left = "blinding" Right = Bool }
	Optional = { Left = "random" Right = Bool }
	Optional = { Left = "leadership_traits" Right = NnInt }
	Optional = { Left = "inherit_chance" Right = NonNegPercent }
	Optional = { Left = "prevent_decadence" Right = Bool }
	Optional = { Left = "unique" Right = Bool }
	Optional = { Left = "ruler_designer_cost" Right = Double }
	Optional = { Left = "in_hiding" Right = Bool }
	Optional = { Left = "both_parent_has_trait_inherit_chance" Right = Double }
	Optional = { Left = "attribute" Right = Attribute }
	Optional = { Left = "childhood" Right = Bool }
	Optional = { Left = "can_hold_titles" Right = Bool }
	Optional = { Left = "is_visible" Right = CharTriggerFromChar }
	
	Optional = { Left = "command_modifier" Right = CommandModifierDef }
	
	Optional = { Left = "customizer" Right = Bool }
	Optional = { Left = "same_opinion_if_same_religion" Right = NzDbl }
	Optional = { Left = "cost" Right = NzDbl }
	Optional = { Left = "caste_tier" Right = Int }
	Optional = { Left = "religious_branch" Right = { Religion ReligionBranchTag } }
	(Optional If = V110) = { Left = "religious" Right = Bool }
	
	(Ch Y N) = { Left = { Type = ToleratesReligionGroupLiteral } Right = Bool }
	
	Optional = { Left = "male_compliment" Right = Key }
	Optional = { Left = "male_compliment_adj" Right = Key }
	Optional = { Left = "male_insult" Right = Key }
	Optional = { Left = "male_insult_adj" Right = Key }
	
	Optional = { Left = "female_compliment" Right = Key }
	Optional = { Left = "female_compliment_adj" Right = Key }
	Optional = { Left = "female_insult" Right = Key }
	Optional = { Left = "female_insult_adj" Right = Key }
	
	Optional = { Left = "child_compliment" Right = Key }
	Optional = { Left = "child_compliment_adj" Right = Key }
	Optional = { Left = "child_insult" Right = Key }
	Optional = { Left = "child_insult_adj" Right = Key }
		
}
