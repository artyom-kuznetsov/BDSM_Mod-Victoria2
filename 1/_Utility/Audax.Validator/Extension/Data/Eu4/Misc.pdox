(Validator Misc) = {
	Type = GroupValidator
	FriendlyName = "Misc"
	
	Validator = {
		Type = Default
		(FileGroup "common\insults" "*.txt")
		ValidatorName = InsultFile
	}
	
	Validator = {
		Type = Default
		(FileGroup "common\incidents" "*.txt")
		ValidatorName = IncidentFile
	}
	
	Validator = {
		Type = Default
		(FileGroup "common\ages" "*.txt")
		ValidatorName = AgeFile
	}
	
	Validator = {
		Type = Default
		(FileGroup "common\bookmarks" "*.txt")
		ValidatorName = BookmarkFile
	}
	
	Validator = {
		Type = Default
		(FileGroup "music" "songs.txt")
		ValidatorName = SongFile
	}
		
	Validator = {
		Type = Default
		(FileGroup "music\music.asset")
		ValidatorName = MusicAssetFile
	}
	
	Validator = {
		Type = Default
		(FileGroup "common\achievements.txt")
		ValidatorName = AchievementFile
	}
}

(Type InsultFile) = {
	(Ch N N) = {
		Left = { Type = String }
		UniqueId = Left
		Right = InsultDef
		(CheckKey "*" Left IfNot = NoCheckKey)
	}
}

(Type InsultDef) = {
	Optional = { Left = "trigger" Right = CountryTriggerFromCountry }
}

(Type AgeFile) = {
	(Ch N N) = {
		Left = { Type = String }
		Right = AgeDef
		(CheckKey "*" Left IfNot = NoCheckKey)
		(CheckKey "*_short" Left IfNot = NoCheckKey)
		(CheckKey "*_desc" Left IfNot = NoCheckKey)
		UniqueId = Left
	}
}

(Type AgeDef) = {
	Single = { Left = "start" Right = Int }
	Single = { Left = "can_start" Right = GlobalTrigger }
	
	Optional = { Left = "religious_conflicts" Right = Bool }
	Optional = { Left = "absolutism" Right = AbsolutismDef }
	
	Optional = { Left = "objectives" Right = {
		(Ch N N) = {
			Left = { Type = String }
			Right = ObjectiveDef
			(CheckKey "*" Left IfNot = NoCheckKey)
			(CheckKey "*_desc" Left IfNot = NoCheckKey)
			UniqueId = Left
		}
	} }
	
	Optional = { Left = "abilities" Right = {
		(Ch N N) = {
			Left = { Type = String }
			Right = AbilityDef
			(CheckKey "*" Left IfNot = NoCheckKey)
			UniqueId = Left
		}
	} }
}

(Type AbsolutismDef) = {
	# These are some fixed hardcoded options
	Optional = { Left = "harsh_treatment" Right = Double }
	Optional = { Left = "stability" Right = Double }
	Optional = { Left = "decrease_autonomy_command" Right = Double }
	Optional = { Left = "strengthen_government" Right = Double }
	Optional = { Left = "increase_autonomy_command" Right = Double }
	Optional = { Left = "debase_currency" Right = Double }
	Optional = { Left = "execute_rebel_acceptance_command" Right = Double }
	Optional = { Left = "seat_in_parliament" Right = Double }
	Optional = { Left = "war_exhaustion" Right = Double }
}

(Type ObjectiveDef) = {
	Inherits = CountryTrigger
	Optional = { Left = "allow" Right = CountryTrigger }
}

(Type AbilityDef) = {
	Optional = { Left = "modifier" Right = CountryModifierDef }
	Optional = { Left = "allow" Right = CountryTrigger }
	Optional = { Left = "effect" Right = CountryCommand }
	Single = { Left = "ai_will_do" Right = {
		Optional = { Left = "factor" Right = NnDbl }
		(Ch N Y) = { Left = "modifier" Right = {
			Inherits = FactorModifier
			Optional = { Left = "factor" Right = NnDbl }
			
			Inherits = CountryTrigger
		} }
	} }
	Optional = { Left = "rule" Right = {
		Optional = { Left = "force_march_free" Right = Bool }
		Optional = { Left = "ignore_coring_distance" Right = Bool }
		Optional = { Left = "can_bypass_forts" Right = Bool }
		Optional = { Left = "attack_bonus_in_capital_terrain" Right = Bool }
		Optional = { Left = "can_colony_boost_development" Right = Bool }
		Optional = { Left = "free_maintenance_on_expl_conq" Right = Bool }
		Optional = { Left = "can_chain_claim" Right = Bool }
		Optional = { Left = "can_transfer_vassal_wargoal" Right = Bool }
		
	} }
}

(Type IncidentFile) = {
	(Ch N N) = {
		Left = { Type = String }
		Right = IncidentDef
		(CheckKey "*_title" Left IfNot = NoCheckKey)
		(CheckKey "*_desc" Left IfNot = NoCheckKey)
		UniqueId = Left
	}
	
}

(Type IncidentDef) = {
	Single = { Left = "frame" Right = Int }
	Single = { Left = "variable_initial" Right = Double }
	Optional = { Left = "potential" Right = CountryTrigger }
	Optional = { Left = "trigger" Right = CountryTrigger }
	Optional = { Left = "immediate_effect" Right = CountryCommand }
	Optional = { Left = "mean_time_to_happen" Right = {
		OneOf = { "days" "months" "years" }
		Optional = { Left = "days" Right = NonNegativeInt }
		Optional = { Left = "months" Right = NonNegativeInt }
		Optional = { Left = "years" Right = NonNegativeInt }

		(Ch N N) = { Left = "modifier" Right = {
			Inherits = FactorModifier
			Single = { Left = "factor" Right = Double }
			Inherits = CountryTrigger
		} }
	} }
	
}
