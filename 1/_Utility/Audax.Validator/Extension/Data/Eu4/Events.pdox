(Validator Events) = {
	Type = GroupValidator
	FriendlyName = "@Events"
	
	Validator = {
		Type = Default
		(FileGroup "common/disasters" "*.txt")
		ValidatorName = DisasterFile
	}
	
	Validator = {
		Type = Default
		(FileGroup "events" "*.txt")
		ValidatorName = EventFile
	}
	
	(Validator IfNot = Events.NoEventPicturePathChecks) = {
		Type = ResourceUseValidator
		Description = "Event pictures"
		SupplyUnique = True
		
		# For picture=""
		Supply = {
			(DataSource StringList) = { "" }
			MustBeMatched = False
		}
		
		Supply = {
			(DataSource Enum) = {
				Key = SpriteType
			}
			
			MustBeMatched = False
		}
		
		Demand = {
			(DataSource Chained) = {
				Pdo = { (FileGroup "events" "*.txt") }
				SelectPath = { Path = "*\picture\[R]" }
				#(StringOp ToUpper)
			}
			
			MustBeMatched = True
		}
		
		# The default event image
		#Demand = {
		#	(DataSource StringList) = { "GFX_EVENT_NO_IMAGE" }
		#	MustBeMatched = True
		#}
	}
}


(Type EventFile) = {
	(Ch N Y) = { Left = "namespace" Right = String }
	Optional = { Left = "normal_or_historical_nations" Right = Bool }
	
	(Ch N N) = { Left = "country_event" Right = ProbablyCountryEvent }
	(Ch N N) = { Left = "province_event" Right = ProvinceEvent }
}

(Type ProbablyCountryEvent) = {
	NodeSwitcher = {
		Node = "id"
		Default = CountryEvent
		MarkChecked = False
		
		Switch = {
			#(OnActionProvinceEvent Enum) = ProvinceEvent
		}
	}
}

(Import "CountryEvent" From "EventsHelper" WithFlag "c")
(Import "ProvinceEvent" From "EventsHelper" WithFlag "p")

#(Script If = Eu3Ht) = {
#	(DataSource Pdo) = { Path = "common\on_actions" "*.txt" }
#	(MakeEnumValidator OnActionProvinceEvent) = "on_hre_province_reconquest\events\*\[R]"
#}