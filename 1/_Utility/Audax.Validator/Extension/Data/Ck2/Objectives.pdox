(Validator Objectives) = {
	Type = Default
	FriendlyName = "Objectives"
	Description = "Ambitions, Factions, Focuses and Plots"
	(FileGroup "common\objectives" "*.txt")
	ValidatorName = ObjectiveFile
}

(Type CheckShortLocalization) = {
	(CheckKey "*_short" Left IfNot = NoCheckKey)
}

(Type ObjectiveFile) = {
	(Ch Y N) = {
		Left = { Type = String }
		Right = ObjectiveDef
		(CheckKey "*_desc" Left IfNot = NoCheckKey)
		(CheckKey "*_title" Left IfNot = NoCheckKey)
	}
}

Global = {
(Type.Enum Objective) = { Import = { (FileGroup "common\objectives" "*.txt") SelectPath = "*\[L]" } }
}

(Type ObjectiveDef) = {
	Inherits = CharModifier
		
	NodeSwitcher = {
		Node = "*"
		Default = {}
		Switch = {
			(Plot Enum) = CheckShortLocalization
			(Faction Enum) = CheckShortLocalization
		}
	}
	
	Optional = { Left = "modifier_name" Right = Key }

	Single = { Left = "type" Right = { Literal = "liege_titles" Literal = "character" 
		Literal = "realm_characters" Literal = "spouse" Literal = "realm_titles"
		Literal = "vassal_titles" Literal = "realm_characters_plus" Literal = "liege_titles_w_claimant"
		Literal = "rep_trade_posts" } }

	NodeSwitcher = {
		Node = "type"
		
		Switch = {
			"realm_titles" = TitleObjective
			"vassal_titles" = TitleObjective
			"liege_titles" = TitleObjective
			"liege_titles_w_claimant" = TitleObjective
			"character" = CharObjective
			"realm_characters" = CharObjective
			"realm_characters_plus" = CharObjective
			"spouse" = CharObjective
			"rep_trade_posts" = TradePostObjective
		}
	}
	
	Optional = { Left = "exclusive" Right = Bool }
	Optional = { Left = "military_plot" Right = Bool }
	Optional = { Left = "expectation_of_liege" Right = Bool }
	Optional = { Left = "intrigue_plot" Right = Bool }
	Optional = { Left = "murder_plot" Right = Bool }
	Optional = { Left = "vassal_rank_plot" Right = Bool }
	Optional = { Left = "vassal_intrigue_plot" Right = Bool }
	Optional = { Left = "fertility" Right = Double }
	Optional = { Left = "rel_head_loyalist" Right = Bool }
	Optional = { Left = "cancel_on_leader_death" Right = Bool }
	Optional = { Left = "warning_level" Right = Double }
	Optional = { Left = "potential_traits" Right = { (PdoList Y) = { Type = Trait } } }
	Optional = { Left = "is_job_ambition" Right = Bool }
	Optional = { Left = "aggression" Right = Double }
	Optional = { Left = "good_traits" Right = { (PdoList Y) = { Type = Trait } } }
	Optional = { Left = "bad_traits" Right = { (PdoList Y) = { Type = Trait } } }
	Optional = { Left = "ai_capital_kingdom_focus" Right = Bool }
	Optional = { Left = "can_cancel" Right = Bool }
}

(Type TradePostObjective) = {
	Optional = { Left = "potential" Right = CharTrigger }
	Optional = { Left = "target_potential" Right = ProvinceObjectiveTrigger }
	Optional = { Left = "membership" Right = CharFromCharFromFromTitleFactorWeight }
	Optional = { Left = "allow" Right = ProvinceObjectiveTrigger }
	Optional = { Left = "allow_join" Right = TitleObjectiveTrigger }
	Optional = { Left = "player_allow" Right = TitleObjectiveTrigger }
	Single = { Left = "chance" Right = TitleFromCharFactorWeight }
	Single = { Left = "success" Right = TitleObjectiveTrigger }
	Optional = { Left = "abort" Right = TitleObjectiveTrigger }
	Optional = { Left = "abort_effect" Right = TitleObjectiveCommand }
	Optional = { Left = "creation_effect" Right = TitleObjectiveCommand }
	Optional = { Left = "effect" Right = TitleObjectiveCommand }

}

#region Title objectives

(Type TitleObjective) = {
	Optional = { Left = "society_plot" Right = SocietyPlotTitleTrigger }
	Optional = { Left = "potential" Right = CharTrigger }
	Optional = { Left = "target_potential" Right = TitleTargetPotentialTrigger }
	Optional = { Left = "membership" Right = CharFromCharFromFromTitleFactorWeight }
	Optional = { Left = "allow" Right = TitleObjectiveTrigger }
	Optional = { Left = "player_allow" Right = TitleObjectiveTrigger }
	Optional = { Left = "allow_join" Right = TitleObjectiveMembershipTrigger }
	Single = { Left = "chance" Right = TitleFromCharFactorWeight }
	Single = { Left = "success" Right = TitleObjectiveTrigger }
	Optional = { Left = "abort" Right = TitleObjectiveTrigger }
	Optional = { Left = "abort_effect" Right = TitleObjectiveCommand }
	Optional = { Left = "creation_effect" Right = TitleObjectiveCommand }
	Optional = { Left = "effect" Right = TitleObjectiveCommand }

}

(Type SocietyPlotTitleTrigger) = { ContextValidator = SocietyPlotTitleTrigger }
(ContextValidator SocietyPlotTitleTrigger) = {
	Inherits = CharTrigger
	FromTarget = Title
	FromFromTarget = Society
}

(Type TitleTargetPotentialTrigger) = { ContextValidator = TitleTargetPotentialTrigger }

(ContextValidator TitleTargetPotentialTrigger) = {
	Inherits = TitleTrigger
	FromTarget = Char
}

(Type TitleObjectiveTrigger) = { ContextValidator = TitleObjectiveTrigger }
(ContextValidator TitleObjectiveTrigger) = {
	Inherits = TitleTrigger
	# But is this actually correct?
	#ThisTarget = Char # yah really https://forum.paradoxplaza.com/forum/index.php?threads/the-validator-find-errors-quickly-and-with-minimal-pain.597480/page-110#post-20866278
	FromTarget = Char
}

(Type TitleObjectiveMembershipTrigger) = { ContextValidator = TitleObjectiveMembershipTrigger }
(ContextValidator TitleObjectiveMembershipTrigger) = {
	Inherits = CharTrigger
	FromTarget = Char
	FromFromTarget = Title
}

(Type TitleObjectiveCommand) = { ContextValidator = TitleObjectiveCommand }
(ContextValidator TitleObjectiveCommand) = {
	Inherits = TitleCommand
	FromTarget = Char
}


#endregion Title objectives

#region Char objectives

(Type CharObjective) = {
	Optional = { Left = "society_plot" Right = SocietyPlotCharTrigger }
	Optional = { Left = "potential" Right = CharTrigger }
	Optional = { Left = "target_potential" Right = CharObjectiveTrigger }
	Optional = { Left = "membership" Right = CharFromCharFromFromCharFactorWeight }
	Optional = { Left = "allow" Right = CharObjectiveTrigger }
	Optional = { Left = "player_allow" Right = CharObjectiveTrigger }
	Optional = { Left = "allow_join" Right = CharObjectiveMembershipTrigger }
	Single = { Left = "chance" Right = CharFromCharFactorWeight }
	Single = { Left = "success" Right = CharObjectiveTrigger }
	Optional = { Left = "abort" Right = CharObjectiveTrigger }
	Optional = { Left = "abort_effect" Right = CharObjectiveCommand }
	Optional = { Left = "creation_effect" Right = CharObjectiveCommand }
	Optional = { Left = "effect" Right = CharObjectiveCommand }
	
}

(Type SocietyPlotCharTrigger) = { ContextValidator = SocietyPlotCharTrigger }
(ContextValidator SocietyPlotCharTrigger) = {
	Inherits = CharTrigger
	FromTarget = Char
	FromFromTarget = Society
}

(Type CharObjectiveTrigger) = { ContextValidator = CharObjectiveTrigger }
(ContextValidator CharObjectiveTrigger) = {
	Inherits = CharTrigger
	FromTarget = Char
}

(Type CharObjectiveCommand) = { ContextValidator = CharObjectiveCommand }
(ContextValidator CharObjectiveCommand) = {
	Inherits = CharCommand
	FromTarget = Char
}

(Type CharObjectiveMembershipTrigger) = { ContextValidator = CharObjectiveMembershipTrigger }
(ContextValidator CharObjectiveMembershipTrigger) = {
	Inherits = CharTrigger
	FromTarget = Char
	FromFromTarget = Char
}


#endregion Char objectives


#region Province objectives

(Type ProvinceObjective) = {
	Optional = { Left = "society_plot" Right = SocietyPlotProvTrigger }
	Optional = { Left = "potential" Right = CharTrigger }
	Optional = { Left = "membership" Right = CharFromCharFromFromProvFactorWeight }
	Optional = { Left = "allow" Right = ProvinceObjectiveTrigger }
	Optional = { Left = "player_allow" Right = ProvinceObjectiveTrigger }
	Single = { Left = "chance" Right = ProvFromCharFactorWeight }
	Single = { Left = "success" Right = ProvinceObjectiveTrigger }
	Optional = { Left = "abort" Right = ProvinceObjectiveTrigger }
	Optional = { Left = "abort_effect" Right = ProvinceObjectiveCommand }
	Optional = { Left = "creation_effect" Right = ProvinceObjectiveCommand }
	Optional = { Left = "effect" Right = ProvinceObjectiveCommand }

}

(Type SocietyPlotProvTrigger) = { ContextValidator = SocietyPlotProvTrigger }
(ContextValidator SocietyPlotProvTrigger) = {
	Inherits = CharTrigger
	FromTarget = Prov
	FromFromTarget = Society
}

(Type ProvinceObjectiveTrigger) = { ContextValidator = ProvinceObjectiveTrigger }
(ContextValidator ProvinceObjectiveTrigger) = {
	Inherits = ProvTrigger
	FromTarget = Char
}

(Type ProvinceObjectiveCommand) = { ContextValidator = ProvinceObjectiveCommand }
(ContextValidator ProvinceObjectiveCommand) = {
	Inherits = ProvCommand
	FromTarget = Char
}


#endregion Province objectives







