(Validator CbTypes) = {
	Type = Default
	FriendlyName = "Casus belli"
	(FileGroup "common\cb_types" "*.txt")
	ValidatorName = CbTypes
}

(Type CbTypes) = {
	(Ch Y N) = { Left = { Type = String } Right = CbTypeDef (CheckKey "*_desc" Left IfNot = NoCheckKey) }
}

(Type CbTypeDef) = {
	Single = { Left = "name" Right = Key }
	Single = { Left = "war_name" Right = Key }
	Single = { Left = "sprite" Right = PInt }
	Single = { Left = "truce_days" Right = NonNegInt }
	
	Optional = { Left = "full_hostility" Right = Bool }
	Optional = { Left = "is_crusade" Right = Bool }
	Optional = { Left = "diplo_view_region" Right = GeographicalRegion }
	Optional = { Left = "sort_priority" Right = Int }
	Optional = { Left = "attacker_unoccupied_warscore" Right = Bool }
	Optional = { Left = "defender_unoccupied_warscore" Right = Bool }
	Optional = { Left = "check_de_jure_tier" Right = Tier }
	Optional = { Left = "display_on_map" Right = Bool }
	Optional = { Left = "is_holy_war" Right = Bool }
	Optional = { Left = "is_claim_all" Right = Bool }
	Optional = { Left = "can_attack_vassals" Right = Bool }
	Optional = { Left = "can_ask_to_join_war" Right = Bool }
	Optional = { Left = "can_call_allies" Right = Bool }
	Optional = { Left = "attacker_can_call_allies" Right = Bool }
	Optional = { Left = "defender_can_call_allies" Right = Bool }
	(Optional If = V110) = { Left = "apply_short_occ_mod" Right = Bool }
	Optional = { Left = "hostile_against_others" Right = Bool }
	Optional = { Left = "is_permanent" Right = Bool }
	Optional = { Left = "other_de_jure_claim" Right = Bool }
	Optional = { Left = "press_claim" Right = Bool }
	Optional = { Left = "can_call_vassals" Right = Bool }
	Optional = { Left = "allow_whitepeace" Right = Bool }
	Optional = { Left = "is_revolt_cb" Right = Bool }
	Optional = { Left = "check_actor_direct_vassals" Right = Bool }
	Optional = { Left = "check_all_titles" Right = Bool }
	Optional = { Left = "check_dejure_duchies" Right = Bool }
	Optional = { Left = "is_independence" Right = Bool }
	Optional = { Left = "reflect_titleholder_change" Right = Bool }
	Optional = { Left = "attacker_alliance_occ_warscore" Right = Bool }
	Optional = { Left = "major_revolt" Right = Bool }
	Optional = { Left = "check_all_trade_posts" Right = Bool }
	(Optional If = V110) = { Left = "piety_cost" Right = Double }
	(Optional If = V110) = { Left = "prestige_cost" Right = Double }
	(Optional If = V110) = { Left = "allow_distant" Right = Bool }
	# Replaced by tributary type system
	# Optional = { Left = "allowed_to_target_suzerains" Right = Bool }
	Optional = { Left = "allowed_to_target_tributaries" Right = Bool }
	#Optional = { Left = "coalition_threat" Right = Bool }
	Optional = { Left = "is_tyranny_cb" Right = Bool }
	Optional = { Left = "att_ticking_war_score_multiplier" Right = Double }
	Optional = { Left = "def_ticking_war_score_multiplier" Right = Double }
	Optional = { Left = "max_attacker_occupation_score" Right = Double }
	Optional = { Left = "max_defender_occupation_score" Right = Double }
	Optional = { Left = "capturing_defender_is_complete_victory" Right = Bool }
	Optional = { Left = "capturing_attacker_is_complete_victory" Right = Bool }
	Optional = { Left = "max_attacker_battle_score" Right = Double }
	Optional = { Left = "max_defender_battle_score" Right = Double }
	Optional = { Left = "hostages_block_cb" Right = Bool }
	
	Optional = { Left = "is_valid" Right = CbNormalCharTrigger }
	Optional = { Left = "is_valid_title" Right = CbTitleTrigger }
	Optional = { Left = "on_add" Right = CharCommandFromChar }
	Optional = { Left = "on_add_title" Right = CbTitleCommand }
	Optional = { Left = "on_add_posttitle" Right = CbNormalCommand }
	Optional = { Left = "on_success" Right = CbNormalCommand }
	Optional = { Left = "on_success_title" Right = CbTitleCommand }
	Optional = { Left = "on_success_posttitle" Right = CbNormalCommand }
	Optional = { Left = "on_fail" Right = CbNormalCommand }
	Optional = { Left = "on_fail_title" Right = CbTitleCommand }
	Optional = { Left = "on_fail_posttitle" Right = CbNormalCommand }
	Optional = { Left = "on_invalidation" Right = CbNormalCommand }
	Optional = { Left = "on_invalidation_title" Right = CbTitleCommand }
	Optional = { Left = "on_invalidation_posttitle" Right = CbNormalCommand }
	Optional = { Left = "on_reverse_demand" Right = CbNormalCommand }
	Optional = { Left = "on_reverse_demand_title" Right = CbTitleCommand }
	Optional = { Left = "on_reverse_demand_posttitle" Right = CbNormalCommand }
	Optional = { Left = "can_use_title" Right = CbTitleTrigger }
	Optional = { Left = "can_use" Right = CbNormalCharTrigger }
	Optional = { Left = "third_party_portrait" Right = MaybeEventTargetChar }
	Optional = { Left = "can_use_gui" Right = CanUseGuiCharTrigger }
	Optional = { Left = "ai_will_do" Right = TitleThisCharFromCharFactorWeight }
	
	Optional = { Left = "on_attacker_leader_death" Right = CbNormalCommand }
	Optional = { Left = "on_defender_leader_death" Right = CbNormalCommand }
	Optional = { Left = "on_thirdparty_death" Right = CbNormalCommand }
	
	Optional = { Left = "attacker_ai_victory_worth" Right = TitleThisCharFromCharFactorWeight }
	Optional = { Left = "attacker_ai_defeat_worth" Right = TitleThisCharFromCharFactorWeight }
	Optional = { Left = "defender_ai_victory_worth" Right = TitleThisCharFromCharFactorWeight }
	Optional = { Left = "defender_ai_defeat_worth" Right = TitleThisCharFromCharFactorWeight }
	
	Optional = { Left = "battle_warscore_mult" Right = Double }
	Optional = { Left = "attacker_rel_head_is_ally" Right = Bool }
	Optional = { Left = "infamy_modifier" Right = Double }
	
	(Optional If = Add1) = { Left = "attacker_rel_head_is_ally" Right = Bool }
	
}

(Type CbNormalCharTrigger) = { ContextValidator = CbNormalCharTrigger }
(ContextValidator CbNormalCharTrigger) = {
	Inherits = CharTrigger
	ThisTarget = Char
	FromTarget = Char
	FromFromTarget = Char
}

(Type CanUseGuiCharTrigger) = { ContextValidator = CanUseGuiCharTrigger }
(ContextValidator CanUseGuiCharTrigger) = {
	Inherits = CharTrigger
	ThisTarget = Char
	FromTarget = Char
	FromFromTarget = Title
}

(Type CbNormalCommand) = { ContextValidator = CbNormalCommand }
(ContextValidator CbNormalCommand) = {
	Inherits = CharCommand
	ThisTarget = Char
	FromTarget = Char
	FromFromTarget = Char
}

(Type CbWarCommandWithRootCharFromChar) = { ContextValidator = CbWarCommandWithRootCharFromChar }
(ContextValidator CbWarCommandWithRootCharFromChar) = {
	Inherits = WarCommand
	ThisTarget = Char
	FromTarget = Char
}

(Type CbTitleTrigger) = { ContextValidator = CbTitleTrigger }
(ContextValidator CbTitleTrigger) = {
	Inherits = TitleTrigger
	ThisTarget = Char
	FromTarget = Char
	FromFromTarget = Char
}

(Type CbTitleCommand) = { ContextValidator = CbTitleCommand }
(ContextValidator CbTitleCommand) = {
	Inherits = TitleCommand
	ThisTarget = Char
	FromTarget = Char
	FromFromTarget = Char
}


