(ContextValidator TitleTrigger) = { Scopes = {
	CharTrigger = "holder_scope"

} }

(ContextValidator ProvTrigger) = { Scopes = {
	CharTrigger = "holder_scope"

} }

(ContextValidator TitleCommand) = { Scopes = {
	CharCommand = "holder_scope"

} }

(ContextValidator ProvCommand) = { Scopes = {
	CharCommand = "holder_scope"

} }

(ContextValidator CharTrigger) = { Members = {
	(N N) = { Left = "random_trade_post" Right = ProvTriggerWithCount }
	(N N) = { Left = "any_trade_post" Right = ProvTriggerWithCount }
	(N N) = { Left = "random_fort" Right = ProvTriggerWithCount }
	(N N) = { Left = "any_fort" Right = ProvTriggerWithCount }
	(N N) = { Left = "random_hospital" Right = ProvTriggerWithCount }
	(N N) = { Left = "any_hospital" Right = ProvTriggerWithCount }

} }

(ContextValidator ProvTrigger) = { Members = {
	(N Y) = { Left = "has_building" Right = { Building ImprovementValue } }
	# Goes to capital's holding type
	(A Y) = { Left = "holding_type" Right = HoldingType }
	(N Y) = { Left = "hospital_is_building" Right = { ImprovementValue } }
	(N Y) = { Left = "fort_is_building" Right = { ImprovementValue } }
	(N Y) = { Left = "trade_post_is_building" Right = { ImprovementValue } }

} }

(ContextValidator TitleTrigger) = { Members = {
	(A Y) = { Left = "holding_type" Right = HoldingType }
	(Y  ) = { Left = "is_primary_holder_title" Right = Bool }
	(Y  ) = { Left = "is_primary_holder_title_tier" Right = Bool }
	(Y  ) = { Left = "has_holder" Right = Bool }
	(Y  ) = { Left = "holder" Right = OnlyCharTarget }
	
	(Y  ) = { Left = "is_feudal" Right = Bool }
	(Y  ) = { Left = "is_theocracy" Right = Bool }
	(Y  ) = { Left = "is_republic" Right = Bool }
	
	(N Y) = { Left = "num_of_buildings" Right = { NnInt VariableName } } # Can have comparison operators
	(N Y) = { Left = "has_building" Right = { Building ImprovementValue } }
	(N Y) = { Left = "is_building" Right = { ImprovementValue } }

} }

(ContextValidator Command) = { Members = {
	# https://forum.paradoxplaza.com/forum/index.php?threads/the-validator-find-errors-quickly-and-with-minimal-pain.597480/page-93#post-19730333
{% for place in ['fort', 'tradepost', 'hospital'] %}
	(N Y) = { Left = "destroy_{{ place }}" Right = { Province MaybeEventTargetProvTitle CapitalScope } }

{% endfor %}
} }

{% for scope in ['Char', 'Title'] %}
(ContextValidator {{ scope }}Command) = { Members = {
{% for place in ['fort', 'tradepost', 'hospital'] %}
	(N Y) = { Left = "create_{{ place }}" Right = { Province MaybeEventTargetProv CapitalScope } }

{% endfor %}
} }
{% endfor %}

(ContextValidator CharCommand) = { Members = {
	(N N) = { Left = "random_trade_post" Right = ProvRandomCommand }
	(N N) = { Left = "any_trade_post" Right = ProvMaybeLimitCommand }
	(N N) = { Left = "random_fort" Right = ProvRandomCommand }
	(N N) = { Left = "any_fort" Right = ProvMaybeLimitCommand }
	(N N) = { Left = "random_hospital" Right = ProvRandomCommand }
	(N N) = { Left = "any_hospital" Right = ProvMaybeLimitCommand }

} }

(ContextValidator ProvCommand) = { Members = {
	(N Y) = { Left = "add_to_extra_holding" Right = {
		Single = { Left = "type" Right = { Literal = "hospital" Literal = "fort" Literal = "trade_post" } }
		Single = { Left = "building" Right = ImprovementValue }
	} }
	(N Y) = { Left = "destroy_in_extra_holding" Right = {
		Single = { Left = "type" Right = { Literal = "hospital" Literal = "fort" Literal = "trade_post" } }
		Single = { Left = "building" Right = ImprovementValue }
	} }
} }

(ContextValidator TitleCommand) = { Members = {
	(N N) = { Left = "destroy_random_building" Right = { Yes MaybeEventTargetTitle } }

	(N Y) = { Left = "add_to_extra_holding" Right = {
		Single = { Left = "type" Right = { Literal = "hospital" Literal = "fort" Literal = "trade_post" } }
		Single = { Left = "building" Right = ImprovementValue }
	} }
	(N Y) = { Left = "destroy_in_extra_holding" Right = {
		Single = { Left = "type" Right = { Literal = "hospital" Literal = "fort" Literal = "trade_post" } }
		Single = { Left = "building" Right = ImprovementValue }
	} }
} }





















