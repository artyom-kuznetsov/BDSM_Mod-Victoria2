
{% for scope in ['Prov', 'Char'] %}

(ContextValidator {{ scope }}Trigger) = { Members = {
	(N N) = { Left = "liege" Right = CharTrigger }
	(N N) = { Left = "top_liege" Right = CharTrigger }

} }

(ContextValidator {{ scope }}Command) = { Members = {
	(N N) = { Left = "liege" Right = CharCommand }
	(N N) = { Left = "top_liege" Right = CharCommand }

} }

{% endfor %}

(ContextValidator ProvTrigger) = { Members = {
	(N Y) = { Left = "de_facto_liege" Right = { MaybeEventTargetTitle VariousOwners } }
	(N Y) = { Left = "de_jure_liege" Right = { MaybeEventTargetCharTitle AnyTitle VariousOwners } }
	(N Y) = { Left = "is_liege_or_above" Right = { MaybeEventTargetCharProvTitle CharTargetExcludingMaybeEventTarget AnyTitle } }
	(N Y) = { Left = "is_liege_or_above_of" Right = { MaybeEventTargetCharProvTitle AnyTitle CharTargetExcludingMaybeEventTarget } }
	(A Y) = { Left = "de_jure_liege_or_above" Right = { MaybeEventTargetCharTitle AnyTitle CharTargetExcludingMaybeEventTarget ThirdpartyTitleScope VariousOwners } }

} }

(ContextValidator CharTrigger) = { Members = {
	(N N) = { Left = "any_defacto_liege" Right = TitleTriggerWithCount }
	(N N) = { Left = "any_de_jure_vassal_title" Right = TitleTriggerWithCount }
	(N N) = { Left = "any_courtier_or_vassal" Right = CharTriggerWithCount }
	(N N) = { Left = "any_vassal" Right = CharTriggerWithCount }
	(N N) = { Left = "liege_before_war" Right = CharTrigger }
	(N N) = { Left = "any_liege" Right = CharTriggerWithCount }
	(N N) = { Left = "dejure_liege_title" Right = TitleTrigger }
	(N N) = { Left = "any_dejure_liege" Right = TitleTriggerWithCount }
	
	(N Y) = { Left = "vassal_of" Right = { MaybeEventTargetCharTitle CharTargetExcludingMaybeEventTarget AnyTitle } }
	(N Y) = { Left = "num_of_vassals" Right =  { NnInt VariableName } } # Can have comparison operators
	(N Y) = { Left = "is_vassal_or_below" Right = { MaybeEventTargetCharTitle CharTargetExcludingMaybeEventTarget AnyTitle } }
	(N Y) = { Left = "is_vassal_or_below_of" Right = { MaybeEventTargetCharTitle CharTargetExcludingMaybeEventTarget AnyTitle } }
	
	(A Y) = { Left = "de_jure_vassal_or_below" Right = { MaybeEventTargetCharTitle CharTargetExcludingMaybeEventTarget AnyTitle } }
	(N Y) = { Left = "de_jure_liege" Right = { MaybeEventTargetCharTitle AnyTitle CharTargetExcludingMaybeEventTarget } }
	(N Y) = { Left = "same_liege" Right = { MaybeEventTargetChar CharTargetExcludingMaybeEventTarget } }
	(N Y) = { Left = "is_liege_or_above" Right = { MaybeEventTargetCharProvTitle CharTargetExcludingMaybeEventTarget AnyTitle } }
	(N Y) = { Left = "is_liege_or_above_of" Right = { MaybeEventTargetCharProvTitle CharTargetExcludingMaybeEventTarget AnyTitle } }
	(N Y) = { Left = "is_liege_of" Right = { MaybeEventTargetCharProvTitle CharTargetExcludingMaybeEventTarget AnyTitle } }
	(N Y) = { Left = "de_facto_liege" Right = { MaybeEventTargetChar CharTargetExcludingMaybeEventTarget } }
	
	(N Y) = { Left = "relative_power_to_liege" Right = { NnDbl VariableName } } # Can have comparison operators
	(A Y) = { Left = "de_jure_liege_or_above" Right = { MaybeEventTargetCharTitle AnyTitle CharTargetExcludingMaybeEventTarget ThirdpartyTitleScope } }

} }

(ContextValidator TitleTrigger) = { Members = {
	(N N) = { Left = "dejure_liege_title" Right = TitleTrigger }
	(N N) = { Left = "any_defacto_liege" Right = TitleTriggerWithCount }

	# Re next two: https://forum.paradoxplaza.com/forum/index.php?threads/the-validator-find-errors-quickly-and-with-minimal-pain.597480/page-118#post-21856021
	(N N) = { Left = "any_de_jure_liege_title" Right = TitleTriggerWithCount }
	(N N) = { Left = "any_dejure_liege" Right = TitleTriggerWithCount }
	(N N) = { Left = "any_de_facto_liege_title" Right = TitleTriggerWithCount }
	
	# Broken: http://forum.paradoxplaza.com/forum/showthread.php?597480-The-Validator-Find-errors-quickly-and-with-minimal-pain!&p=18094719&viewfull=1#post18094719
	# However, now fixed: https://forum.paradoxplaza.com/forum/index.php?threads/the-validator-find-errors-quickly-and-with-minimal-pain.597480/page-107#post-20723106
	(N N) = { Left = "any_de_jure_vassal_title" Right = TitleTriggerWithCount }
	(N N) = { Left = "any_direct_de_jure_vassal_title" Right = TitleTriggerWithCount }
	(N N) = { Left = "any_vassal" Right = CharTriggerWithCount }
	(N N) = { Left = "any_de_jure_vassal" Right = CharTriggerWithCount }
	
	(A Y) = { Left = "de_jure_vassal_or_below" Right = { MaybeEventTargetCharTitle CharTargetExcludingMaybeEventTarget AnyTitle } }
	(N Y) = { Left = "de_facto_liege" Right = { MaybeEventTargetCharTitle } }
	(A Y) = { Left = "de_jure_liege" Right = { MaybeEventTargetCharTitle AnyTitle 0 } }
	(A Y) = { Left = "de_jure_liege_or_above" Right = { MaybeEventTargetCharTitle AnyTitle CharTargetExcludingMaybeEventTarget ThirdpartyTitleScope } }

} }

(ContextValidator CharCommand) = { Members = {
	#(N N) = { Left = "any_de_jure_liege_title" Right = TitleMaybeLimitCommand }
	#(N N) = { Left = "any_de_facto_liege_title" Right = TitleMaybeLimitCommand }
	(N N) = { Left = "any_de_jure_vassal_title" Right = TitleMaybeLimitCommand }
	(N N) = { Left = "random_vassal" Right = CharRandomCommand }
	(N N) = { Left = "random_courtier_or_vassal" Right = CharRandomCommand }
	(N N) = { Left = "any_vassal" Right = CharMaybeLimitCommand }
	(N N) = { Left = "any_courtier_or_vassal" Right = CharMaybeLimitCommand }
	(N N) = { Left = "any_liege" Right = CharMaybeLimitCommand }
	(N N) = { Left = "liege_before_war" Right = CharCommand }
	# Doesn't work per https://forum.paradoxplaza.com/forum/threads/the-validator-find-errors-quickly-and-with-minimal-pain.597480/post-26534086
	# (N N) = { Left = "any_dejure_liege" Right = TitleMaybeLimitCommand }
	
	(N N) = { Left = "dejure_liege_title" Right = TitleCommand }
	(Y  ) = { Left = "de_jure_liege" Right = { MaybeEventTargetCharTitle AnyTitle 0 } }

	(Y  ) = { Left = "set_defacto_vassal" Right = OnlyCharTarget }
	# Why this isn't (Y  )
	# https://forum.paradoxplaza.com/forum/index.php?threads/the-validator-find-errors-quickly-and-with-minimal-pain.597480/page-127#post-22886480
	# I have create_title between those. First set_defacto_liege ensures that the character has the correct home province from where to rebel, the second makes him independent under the rebel title.
	(N N) = { Left = "set_defacto_liege" Right = { MaybeEventTargetCharTitle AnyTitle CharTargetExcludingMaybeEventTarget } }
} }

(ContextValidator TitleCommand) = { Members = {
	(N N) = { Left = "any_de_jure_vassal_title" Right = TitleMaybeLimitCommand }
	
	# Re next two: https://forum.paradoxplaza.com/forum/index.php?threads/the-validator-find-errors-quickly-and-with-minimal-pain.597480/page-118#post-21856021
	(N N) = { Left = "any_de_jure_liege_title" Right = TitleMaybeLimitCommand }
	(N N) = { Left = "any_dejure_liege" Right = TitleMaybeLimitCommand }
	(N N) = { Left = "any_de_facto_liege_title" Right = TitleMaybeLimitCommand }
	
	(N N) = { Left = "random_direct_de_jure_vassal_title" Right = TitleRandomCommand }
	(N N) = { Left = "any_direct_de_jure_vassal_title" Right = TitleMaybeLimitCommand }
	(N N) = { Left = "dejure_liege_title" Right = TitleCommand }
	
	(N N) = { Left = "any_de_jure_vassal" Right = CharMaybeLimitCommand }
	(N N) = { Left = "any_vassal" Right = CharMaybeLimitCommand }

	(Y  ) = { Left = "set_defacto_vassal" Right = OnlyCharTarget }
	(Y  ) = { Left = "de_jure_liege" Right = { MaybeEventTargetCharTitle AnyTitle 0 } }
	(Y  ) = { Left = "set_defacto_liege" Right = { MaybeEventTargetCharTitle AnyTitle CharTargetExcludingMaybeEventTarget } }

} }

















